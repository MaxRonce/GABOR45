[{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\__mock__\\supabaseClient.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\__tests__\\UserService.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\capacitor.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\cypress.config.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'on' is defined but never used. Allowed unused args must match /^_/u.","line":6,"column":21,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":23},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'config' is defined but never used. Allowed unused args must match /^_/u.","line":6,"column":25,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":31}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { defineConfig } from \"cypress\";\r\n\r\nexport default defineConfig({\r\n  e2e: {\r\n    baseUrl: \"http://localhost:5173\",\r\n    setupNodeEvents(on, config) {\r\n      // implement node event listeners here\r\n    },\r\n  },\r\n});","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\cypress\\e2e\\test.cy.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\cypress\\support\\commands.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\cypress\\support\\e2e.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\App.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\App.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\components\\ButtonComponent.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":3,"column":33,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":3,"endColumn":36,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[86,89],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[86,89],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { IonButton, IonIcon } from \"@ionic/react\";\r\n\r\nconst ButtonComponent = (props: any) => {\r\n\tconst { classP, text, styleP, iconName, onClick } = props;\r\n\tconst buttonStyle = styleP ? styleP : {};\r\n\treturn (\r\n\t\t<IonButton\r\n\t\t\tonClick={onClick}\r\n\t\t\texpand=\"full\"\r\n\t\t\tshape=\"round\"\r\n\t\t\tclassName={classP}\r\n\t\t\tstyle={buttonStyle}\r\n\t\t>\r\n\t\t\t{iconName && (\r\n\t\t\t\t<IonIcon\r\n\t\t\t\t\tsrc={iconName}\r\n\t\t\t\t\tclassName=\"icon-input ion-margin-horizontal\"\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t{text}\r\n\t\t</IonButton>\r\n\t);\r\n};\r\n\r\nexport default ButtonComponent;\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\components\\ExploreContainer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\components\\InputComponent.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":8,"column":32,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":8,"endColumn":35,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[216,219],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[216,219],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Ionic Components\r\nimport { IonGrid, IonRow, IonCol, IonIcon, IonInput } from \"@ionic/react\";\r\n\r\n// Custom Styling\r\nimport \"../theme/custom.css\";\r\nimport \"../theme/variables.css\";\r\n\r\nconst InputComponent = (props: any) => {\r\n\tconst {\r\n\t\tclassP,\r\n\t\tlabelP,\r\n\t\ttypeP,\r\n\t\ticonName,\r\n\t\tplaceholderP,\r\n\t\tstyleP,\r\n\t\tvalueP,\r\n\t\tonChange,\r\n\t\tclassI,\r\n\t\tclassIcon,\r\n\t\tonIconClick,\r\n\t\ticonP,\r\n\t} = props;\r\n\r\n\treturn (\r\n\t\t<IonGrid class=\"ion-margin-horizontal ion-padding-horizontal\">\r\n\t\t\t<IonRow>\r\n\t\t\t\t{iconName && (\r\n\t\t\t\t\t<IonCol size=\"1\" class=\"ion-margin\">\r\n\t\t\t\t\t\t{iconName && (\r\n\t\t\t\t\t\t\t<IonIcon src={iconName} className={classIcon} />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</IonCol>\r\n\t\t\t\t)}\r\n\t\t\t\t<IonCol class=\"ion-margin-start input-col\">\r\n\t\t\t\t\t<div className={classP}>\r\n\t\t\t\t\t\t{onIconClick && (\r\n\t\t\t\t\t\t\t<IonIcon\r\n\t\t\t\t\t\t\t\tsrc={iconP}\r\n\t\t\t\t\t\t\t\tclassName=\"login-icon ion-icon\"\r\n\t\t\t\t\t\t\t\tonClick={onIconClick}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<IonInput\r\n\t\t\t\t\t\t\tlabel={labelP}\r\n\t\t\t\t\t\t\tlabel-placement=\"floating\"\r\n\t\t\t\t\t\t\ttype={typeP}\r\n\t\t\t\t\t\t\tplaceholder={placeholderP}\r\n\t\t\t\t\t\t\tvalue={valueP}\r\n\t\t\t\t\t\t\tonIonChange={onChange}\r\n\t\t\t\t\t\t\tclassName={classI}\r\n\t\t\t\t\t\t\tstyle={styleP}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</IonCol>\r\n\t\t\t</IonRow>\r\n\t\t</IonGrid>\r\n\t);\r\n};\r\n\r\nexport default InputComponent;\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\components\\LoadingScreen.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\components\\LogoGaborComponent.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\components\\NabvarComponent.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":30,"column":30,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":30,"endColumn":33,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[662,665],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[662,665],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":60,"column":37,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":60,"endColumn":40,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1331,1334],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1331,1334],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":70,"column":27,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":70,"endColumn":30,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1531,1534],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1531,1534],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// React and React Router\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// Ionic Components\r\nimport {\r\n\tIonSearchbar,\r\n\tIonToolbar,\r\n\tIonIcon,\r\n\tIonItem,\r\n\tIonGrid,\r\n\tIonRow,\r\n\tIonCol,\r\n\tIonText,\r\n\tIonHeader,\r\n} from \"@ionic/react\";\r\n\r\n// Custom Styling and Images\r\nimport \"../theme/custom.css\";\r\nimport arrowLeft from \"../icons/arrowLeft.svg\";\r\nimport search from \"../icons/search.svg\";\r\n\r\nconst NabvarComponent = ({\r\n\tsetSearchQuery,\r\n}: {\r\n\tsetSearchQuery: (query: string) => void;\r\n}) => {\r\n\tconst [isActive, setIsActive] = useState([true, false]);\r\n\tconst history = useHistory();\r\n\tconst handleClick = (index: any) => {\r\n\t\tconst updateActive = [...isActive];\r\n\t\tupdateActive[index] = !updateActive[index];\r\n\t\tfor (let i = 0; i < updateActive.length; i++) {\r\n\t\t\tif (i !== index) {\r\n\t\t\t\tupdateActive[i] = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetIsActive(updateActive);\r\n\t\tif (index === 1) {\r\n\t\t\thandleProduit();\r\n\t\t} else {\r\n\t\t\thandleNearby();\r\n\t\t}\r\n\t};\r\n\tconst handleProduit = () => {\r\n\t\tconst page = \"produits\";\r\n\t\thistory.push({\r\n\t\t\tpathname: `/farmers/${page}`,\r\n\t\t\tstate: { page: page },\r\n\t\t});\r\n\t};\r\n\tconst handleNearby = () => {\r\n\t\tconst page = \"producteurs\";\r\n\t\thistory.push({\r\n\t\t\tpathname: `/farmers/${page}`,\r\n\t\t\tstate: { page: page },\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleSearch = async (value: any) => {\r\n\t\tif (value) {\r\n\t\t\tconst searchQuery = value.toLowerCase();\r\n\t\t\tsetSearchQuery(searchQuery);\r\n\t\t}\r\n\t};\r\n\tconst handleBack = () => {\r\n\t\tsetSearchQuery(\"\");\r\n\t};\r\n\r\n\tconst navClass = (index: any) =>\r\n\t\t`nav-line ${isActive[index] ? \"active\" : \"\"}`;\r\n\treturn (\r\n\t\t<IonHeader>\r\n\t\t\t<IonToolbar>\r\n\t\t\t\t<IonItem lines=\"none\" className=\"ion-margin-top\">\r\n\t\t\t\t\t<IonIcon\r\n\t\t\t\t\t\tsrc={arrowLeft}\r\n\t\t\t\t\t\tonClick={handleBack}\r\n\t\t\t\t\t\tclassName=\"nav-icon ion-icon\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<IonSearchbar\r\n\t\t\t\t\t\tplaceholder=\"SEARCH\"\r\n\t\t\t\t\t\tvalue={\"\"}\r\n\t\t\t\t\t\tonIonChange={(e) => handleSearch(e.detail.value)}\r\n\t\t\t\t\t\tclassName=\"ion-justify-content-end searchBar\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<IonIcon\r\n\t\t\t\t\t\t\tsrc={search}\r\n\t\t\t\t\t\t\tslot=\"end\"\r\n\t\t\t\t\t\t\tclassName=\"search-icon\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</IonSearchbar>\r\n\t\t\t\t</IonItem>\r\n\t\t\t\t<IonGrid class=\"ion-margin-horizontal\">\r\n\t\t\t\t\t<IonRow>\r\n\t\t\t\t\t\t<IonCol size=\"6\" class=\"custom-center\">\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName={navClass(0)}\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\thandleClick(0);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<IonText className=\"nav-text ion-text-center\">\r\n\t\t\t\t\t\t\t\t\tà proximité\r\n\t\t\t\t\t\t\t\t</IonText>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</IonCol>\r\n\t\t\t\t\t\t<IonCol size=\"6\" class=\"custom-center\">\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName={navClass(1)}\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\thandleClick(1);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<IonText className=\"nav-text ion-text-center\">\r\n\t\t\t\t\t\t\t\t\tCatégorie\r\n\t\t\t\t\t\t\t\t</IonText>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</IonCol>\r\n\t\t\t\t\t</IonRow>\r\n\t\t\t\t</IonGrid>\r\n\t\t\t</IonToolbar>\r\n\t\t</IonHeader>\r\n\t);\r\n};\r\n\r\nexport default NabvarComponent;\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\dev\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\dev\\palette.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\dev\\previews.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\dev\\useInitial.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'setStatus' is assigned a value but never used.","line":5,"column":20,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":29}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {useState} from \"react\";\r\nimport {InitialHookStatus} from \"@react-buddy/ide-toolbox\";\r\n\r\nexport const useInitial: () => InitialHookStatus = () => {\r\n    const [status, setStatus] = useState<InitialHookStatus>({\r\n        loading: false,\r\n        error: false,\r\n    });\r\n    /*\r\n      Implement hook functionality here.\r\n      If you need to execute async operation, set loading to true and when it's over, set loading to false.\r\n      If you caught some errors, set error status to true.\r\n      Initial hook is considered to be successfully completed if it will return {loading: false, error: false}.\r\n    */\r\n    return status;\r\n};\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\hooks\\useAuth.tsx","messages":[{"ruleId":"@typescript-eslint/ban-ts-comment","severity":2,"message":"Use \"@ts-expect-error\" instead of \"@ts-ignore\", as \"@ts-ignore\" will do nothing if the following line is error-free.","line":13,"column":5,"nodeType":"Line","messageId":"tsIgnoreInsteadOfExpectError","endLine":13,"endColumn":18,"suggestions":[{"messageId":"replaceTsIgnoreWithTsExpectError","fix":{"range":[454,467],"text":"// @ts-expect-error"},"desc":"Replace \"@ts-ignore\" with \"@ts-expect-error\"."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// hooks/useAuth.ts\r\nimport { useState, useEffect } from \"react\";\r\nimport { supabase } from \"../supabaseClient\";\r\nimport { User } from \"@supabase/supabase-js\";\r\n\r\nexport const useAuth = () => {\r\n\tconst [user, setUser] = useState<User | null>(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst { data: authListener } = supabase.auth.onAuthStateChange(\r\n\t\t\tasync (event, session) => {\r\n\t\t\t\tconst currentUser = session?.user; // Obtenez l'utilisateur de la session\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetUser(currentUser);\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\treturn () => {\r\n\t\t\tauthListener?.subscription.unsubscribe();\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn user;\r\n};\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\hooks\\usePhotoGallery.ts","messages":[{"ruleId":"prefer-const","severity":2,"message":"'photo' is never reassigned. Use 'const' instead.","line":22,"column":18,"nodeType":"Identifier","messageId":"useConst","endLine":22,"endColumn":23,"fix":{"range":[776,785],"text":"const photo"}}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import { useState, useEffect } from \"react\";\r\nimport { isPlatform } from '@ionic/react';\r\n\r\n\r\nimport { Camera, CameraResultType, CameraSource, Photo } from '@capacitor/camera';\r\nimport { Filesystem, Directory } from '@capacitor/filesystem';\r\nimport { Preferences } from '@capacitor/preferences';\r\nimport { Capacitor } from '@capacitor/core';\r\n\r\nconst PHOTO_STORAGE = 'photos';\r\nexport function usePhotoGallery() {\r\n\r\n  const [photos, setPhotos] = useState<UserPhoto[]>([]);\r\n\r\n  useEffect(() => {\r\n    const loadSaved = async () => {\r\n      const { value } = await Preferences.get({key: PHOTO_STORAGE });\r\n\r\n      const photosInPreferences = (value ? JSON.parse(value) : []) as UserPhoto[];\r\n      // If running on the web...\r\n      if (!isPlatform('hybrid')) {\r\n        for (let photo of photosInPreferences) {\r\n          const file = await Filesystem.readFile({\r\n            path: photo.filepath,\r\n            directory: Directory.Data\r\n          });\r\n          // Web platform only: Load the photo as base64 data\r\n          photo.webviewPath = `data:image/jpeg;base64,${file.data}`;\r\n        }\r\n      }\r\n      setPhotos(photosInPreferences);\r\n    };\r\n    loadSaved();\r\n  }, []);\r\n\r\n  const takePhoto = async () => {\r\n    const photo = await Camera.getPhoto({\r\n      resultType: CameraResultType.Uri,\r\n      source: CameraSource.Camera,\r\n      quality: 100\r\n    });\r\n    const fileName = new Date().getTime() + '.jpeg';\r\n    const savedFileImage = await savePicture(photo, fileName);\r\n    const newPhotos = [savedFileImage, ...photos];\r\n    setPhotos(newPhotos);\r\n    Preferences.set({key: PHOTO_STORAGE,value: JSON.stringify(newPhotos)});\r\n  };\r\n\r\n  const savePicture = async (photo: Photo, fileName: string): Promise<UserPhoto> => {\r\n    let base64Data: string;\r\n    // \"hybrid\" will detect Cordova or Capacitor;\r\n    if (isPlatform('hybrid')) {\r\n      const file = await Filesystem.readFile({\r\n        path: photo.path!\r\n      });\r\n      base64Data = file.data;\r\n    } else {\r\n      base64Data = await base64FromPath(photo.webPath!);\r\n    }\r\n    const savedFile = await Filesystem.writeFile({\r\n      path: fileName,\r\n      data: base64Data,\r\n      directory: Directory.Data\r\n    });\r\n\r\n    if (isPlatform('hybrid')) {\r\n      // Display the new image by rewriting the 'file://' path to HTTP\r\n      // Details: https://ionicframework.com/docs/building/webview#file-protocol\r\n      return {\r\n        filepath: savedFile.uri,\r\n        webviewPath: Capacitor.convertFileSrc(savedFile.uri),\r\n      };\r\n    }\r\n    else {\r\n      // Use webPath to display the new image instead of base64 since it's\r\n      // already loaded into memory\r\n      return {\r\n        filepath: fileName,\r\n        webviewPath: photo.webPath\r\n      };\r\n    }\r\n  };\r\n\r\n  const deletePhoto = async (photo: UserPhoto) => {\r\n    // Remove this photo from the Photos reference data array\r\n    const newPhotos = photos.filter(p => p.filepath !== photo.filepath);\r\n\r\n    // Update photos array cache by overwriting the existing photo array\r\n    Preferences.set({key: PHOTO_STORAGE, value: JSON.stringify(newPhotos) });\r\n\r\n    // delete photo file from filesystem\r\n    const filename = photo.filepath.substr(photo.filepath.lastIndexOf('/') + 1);\r\n    await Filesystem.deleteFile({\r\n      path: filename,\r\n      directory: Directory.Data\r\n    });\r\n    setPhotos(newPhotos);\r\n  };\r\n\r\n  return {\r\n    deletePhoto,\r\n    photos,\r\n    takePhoto\r\n  };\r\n}\r\n\r\nexport interface UserPhoto {\r\n  filepath: string;\r\n  webviewPath?: string;\r\n}\r\n\r\nexport async function base64FromPath(path: string): Promise<string> {\r\n  const response = await fetch(path);\r\n  const blob = await response.blob();\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.onerror = reject;\r\n    reader.onload = () => {\r\n      if (typeof reader.result === 'string') {\r\n        resolve(reader.result);\r\n      } else {\r\n        reject('method did not return a string')\r\n      }\r\n    };\r\n    reader.readAsDataURL(blob);\r\n  });\r\n}\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\main.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\models\\Categories.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\models\\Farmer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\models\\Horaires.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\models\\News.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\models\\User.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\pages\\Home.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\pages\\authentification\\Login.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":88,"column":38,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":88,"endColumn":41,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2342,2345],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2342,2345],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":109,"column":44,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":109,"endColumn":47,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2821,2824],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2821,2824],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":156,"column":20,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":156,"endColumn":23,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[3852,3855],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[3852,3855],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":167,"column":20,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":167,"endColumn":23,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[4178,4181],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[4178,4181],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'e' is defined but never used. Allowed unused args must match /^_/u.","line":192,"column":18,"nodeType":"Identifier","messageId":"unusedVar","endLine":192,"endColumn":19},{"ruleId":"react/no-unescaped-entities","severity":2,"message":"`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","line":223,"column":34,"nodeType":"JSXText","messageId":"unescapedEntityAlts"}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// React and React Router\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// Ionic Framework Components\r\nimport {\r\n\tuseIonToast,\r\n\tIonText,\r\n\tIonPage,\r\n\tIonContent,\r\n\tIonIcon,\r\n\tIonAlert,\r\n} from \"@ionic/react\";\r\n\r\n// Supabase\r\nimport { supabase } from \"../../supabaseClient\";\r\n\r\n// Custom Components\r\nimport ButtonComponent from \"../../components/ButtonComponent\";\r\nimport InputComponent from \"../../components/InputComponent\";\r\n\r\n// Custom Styling and Images\r\nimport \"../../theme/variables.css\";\r\nimport mail from \"../../icons/mail.svg\";\r\nimport facebook from \"../../icons/facebook.svg\";\r\nimport bloquer from \"../../icons/bloquer.svg\";\r\nimport showP from \"../../icons/showP.svg\";\r\nimport hideP from \"../../icons/hideP.svg\";\r\nimport google from \"../../icons/google.svg\";\r\nimport logo_Gabor45 from \"../../icons/logo_Gabor45.svg\";\r\n\r\nconst Login: React.FC = () => {\r\n\tconst [email, setEmail] = useState<string>(\"\");\r\n\tconst [resetEmail, setResetEmail] = useState<string>(\"\");\r\n\tconst [password, setPassword] = useState<string>(\"\");\r\n\tconst [showToast] = useIonToast();\r\n\tconst [showPassword, setShowPassword] = useState<boolean>(false);\r\n\tconst [showAlert, setShowAlert] = useState<boolean>(false);\r\n\r\n\tconst openAlert = () => {\r\n\t\tsetResetEmail(\" \");\r\n\t\tsetShowAlert(true);\r\n\t};\r\n\tconst handleAlertClose = () => {\r\n\t\tsetResetEmail(\"\");\r\n\t\tsetShowAlert(false);\r\n\t};\r\n\tconst history = useHistory();\r\n\r\n\t//function to login with email and password\r\n\tconst handleLogin = async () => {\r\n\t\ttry {\r\n\t\t\tconst { data, error } = await supabase.auth.signInWithPassword({\r\n\t\t\t\temail: email,\r\n\t\t\t\tpassword: password,\r\n\t\t\t});\r\n\t\t\tconsole.log(data);\r\n\r\n\t\t\tif (!data) {\r\n\t\t\t\tconsole.error(\"Login failed:\", error);\r\n\t\t\t\tawait showToast({\r\n\t\t\t\t\tmessage: \"Error to sigUp\",\r\n\t\t\t\t\tduration: 2000,\r\n\t\t\t\t\tcolor: \"danger\",\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tsetPassword(\"\");\r\n\t\t\t\tsetEmail(\"\");\r\n\t\t\t\tawait showToast({\r\n\t\t\t\t\tmessage: \"Connexion réussie\", // To keep in french\r\n\t\t\t\t\tduration: 1000,\r\n\t\t\t\t\tcolor: \"success\",\r\n\t\t\t\t\tposition: \"middle\",\r\n\t\t\t\t});\r\n\r\n\t\t\t\thistory.push(\"/profile\");\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Unexpected error during login:\", error);\r\n\t\t\tawait showToast({\r\n\t\t\t\tmessage: \"Error to sigUp\",\r\n\t\t\t\tduration: 2000,\r\n\t\t\t\tcolor: \"danger\",\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst signInWith = async (provider: any) => {\r\n\t\ttry {\r\n\t\t\tawait supabase.auth.signInWithOAuth({\r\n\t\t\t\tprovider: provider,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\tawait showToast({\r\n\t\t\t\tmessage: \"Error to sigUp\",\r\n\t\t\t\tduration: 2000,\r\n\t\t\t\tcolor: \"danger\",\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\t//show and hide password\r\n\tconst showPasswordHandler = () => {\r\n\t\tconsole.log(\"Push show password\");\r\n\t\tsetShowPassword(!showPassword);\r\n\t};\r\n\r\n\t//function to send reset password\r\n\tconst handleSendResetPassword = async (e: any) => {\r\n\t\tsetResetEmail(\" \");\r\n\t\tconsole.log(\"email \", e.email);\r\n\t\ttry {\r\n\t\t\tconst { error } = await supabase.auth.resetPasswordForEmail(\r\n\t\t\t\te.email\r\n\t\t\t);\r\n\t\t\tif (error) {\r\n\t\t\t\tawait showToast({\r\n\t\t\t\t\tmessage: \"Error to send\",\r\n\t\t\t\t\tduration: 2000,\r\n\t\t\t\t\tcolor: \"danger\",\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tawait showToast({\r\n\t\t\t\t\tmessage: \"Success\",\r\n\t\t\t\t\tduration: 2000,\r\n\t\t\t\t\tcolor: \"success\",\r\n\t\t\t\t});\r\n\t\t\t\tsetResetEmail(\"\");\r\n\t\t\t\thandleAlertClose();\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\tawait showToast({\r\n\t\t\t\tmessage: \"Error to send\",\r\n\t\t\t\tduration: 2000,\r\n\t\t\t\tcolor: \"danger\",\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<IonPage>\r\n\t\t\t<IonContent class=\"ion-text-center\">\r\n\t\t\t\t<IonIcon src={logo_Gabor45} className=\"gabor45-logo\" />\r\n\t\t\t\t<IonText className=\"ion-margin-horizontal text-title\">\r\n\t\t\t\t\tConnexion\r\n\t\t\t\t</IonText>\r\n\r\n\t\t\t\t<InputComponent\r\n\t\t\t\t\tclassP=\"login-input\"\r\n\t\t\t\t\tlabelP=\"Email\"\r\n\t\t\t\t\ttypeP=\"email\"\r\n\t\t\t\t\ticonName={mail}\r\n\t\t\t\t\tplaceholderP=\"email@domain.com\"\r\n\t\t\t\t\tvalueP={email}\r\n\t\t\t\t\tonChange={(e: any) => setEmail(e.detail.value || \"\")}\r\n\t\t\t\t\tclassI=\"custom-input\"\r\n\t\t\t\t\tclassIcon=\"login-icon ion-icon\"\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<InputComponent\r\n\t\t\t\t\tclassP=\"login-input input-pass\"\r\n\t\t\t\t\tlabelP=\"Mot de passe\"\r\n\t\t\t\t\ttypeP={showPassword ? \"text\" : \"password\"}\r\n\t\t\t\t\tplaceholderP=\"********\"\r\n\t\t\t\t\tvalueP={password}\r\n\t\t\t\t\tonChange={(e: any) => setPassword(e.detail.value || \"\")}\r\n\t\t\t\t\tclassI=\"custom-input\"\r\n\t\t\t\t\ticonName={bloquer}\r\n\t\t\t\t\tclassIcon=\"login-icon ion-icon\"\r\n\t\t\t\t\tonIconClick={showPasswordHandler}\r\n\t\t\t\t\ticonP={showPassword ? showP : hideP}\r\n\t\t\t\t\tstyleP={{\r\n\t\t\t\t\t\tzIndex: \"1\",\r\n\t\t\t\t\t\tposition: \"relative\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<IonText\r\n\t\t\t\t\tonClick={openAlert}\r\n\t\t\t\t\tid=\"motOublie\"\r\n\t\t\t\t\tclassName=\"text-btn ion-padding-horizontal ion-float-right ion-margin-horizontal ion-margin-bottom\"\r\n\t\t\t\t>\r\n\t\t\t\t\tMot de passe oublié ?\r\n\t\t\t\t</IonText>\r\n\t\t\t\t<IonAlert\r\n\t\t\t\t\theader=\"réinitialiser le mot de passe\"\r\n\t\t\t\t\tmessage=\"vous recevrez un courriel pour réinitialiser votre mot de passe\"\r\n\t\t\t\t\tbuttons={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttext: \"Annuler\",\r\n\t\t\t\t\t\t\trole: \"cancel\",\r\n\t\t\t\t\t\t\thandler: (e) => {\r\n\t\t\t\t\t\t\t\tconsole.log(\"Cancelado\");\r\n\t\t\t\t\t\t\t\thandleAlertClose();\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttext: \"Envoyer\",\r\n\t\t\t\t\t\t\thandler: (e) => handleSendResetPassword(e),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]}\r\n\t\t\t\t\tisOpen={showAlert}\r\n\t\t\t\t\tinputs={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: \"email\",\r\n\t\t\t\t\t\t\ttype: \"email\",\r\n\t\t\t\t\t\t\tplaceholder: \"Email\",\r\n\t\t\t\t\t\t\tvalue: resetEmail,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]}\r\n\t\t\t\t/>\r\n\t\t\t\t<ButtonComponent\r\n\t\t\t\t\tclassP=\"btns-login ion-margin-horizontal ion-padding-horizontal\"\r\n\t\t\t\t\ttext=\"Se connecter\"\r\n\t\t\t\t\tonClick={handleLogin}\r\n\t\t\t\t/>\r\n\t\t\t\t<IonText\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\thistory.push(\"/registerUser\");\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName=\"text-btn ion-text-center ion-margin-bottom\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<h3 className=\"text-title\">S'inscrire</h3>\r\n\t\t\t\t</IonText>\r\n\t\t\t\t<div id=\"line-login\">\r\n\t\t\t\t\t<IonText>ou</IonText>\r\n\t\t\t\t</div>\r\n\t\t\t\t<ButtonComponent\r\n\t\t\t\t\tclassP=\"btns-login ion-padding-horizontal ion-margin-horizontal ion-margin-top\"\r\n\t\t\t\t\ttext=\"Se connecter avec Facebook\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsignInWith(\"facebook\");\r\n\t\t\t\t\t}}\r\n\t\t\t\t\ticonName={facebook}\r\n\t\t\t\t\tstyleP={{ \"--ion-color-primary\": \"#2b5c93\" }}\r\n\t\t\t\t/>\r\n\t\t\t\t<ButtonComponent\r\n\t\t\t\t\tclassP=\"btns-login btn-google ion-padding-horizontal ion-margin-horizontal ion-margin-top\"\r\n\t\t\t\t\ttext=\"Se connecter avec Google\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsignInWith(\"google\");\r\n\t\t\t\t\t}}\r\n\t\t\t\t\ticonName={google}\r\n\t\t\t\t/>\r\n\t\t\t</IonContent>\r\n\t\t</IonPage>\r\n\t);\r\n};\r\n\r\nexport default Login;\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\pages\\authentification\\RegisterUser.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":86,"column":20,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":86,"endColumn":23,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2247,2250],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2247,2250],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":97,"column":20,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":97,"endColumn":23,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2573,2576],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2573,2576],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// React and React Router\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// Ionic Components\r\nimport { useIonToast, IonText, IonPage, IonContent } from \"@ionic/react\";\r\n\r\n// Supabase Components\r\nimport { supabase } from \"../../supabaseClient\";\r\n\r\n// Custom Components\r\nimport ButtonComponent from \"../../components/ButtonComponent\";\r\nimport InputComponent from \"../../components/InputComponent\";\r\nimport LogoGaborComponent from \"../../components/LogoGaborComponent\";\r\n\r\n// Images\r\nimport mail from \"../../icons/mail.svg\";\r\nimport bloquer from \"../../icons/bloquer.svg\";\r\nimport showP from \"../../icons/showP.svg\";\r\nimport hideP from \"../../icons/hideP.svg\";\r\n\r\n// Custom Styling\r\nimport \"../../theme/custom.css\";\r\nimport \"../../theme/variables.css\";\r\nimport \"./RegisterUser.css\";\r\n\r\nconst RegisterUser: React.FC = () => {\r\n\tconst [email, setEmail] = useState<string>(\"\");\r\n\tconst [password, setPassword] = useState<string>(\"\");\r\n\tconst [showToast] = useIonToast();\r\n\tconst [showPassword, setShowPassword] = useState<boolean>(false);\r\n\r\n\tconst history = useHistory();\r\n\r\n\tconst handleLogin = async () => {\r\n\t\ttry {\r\n\t\t\tconst { data, error } = await supabase.auth.signUp({\r\n\t\t\t\temail: email,\r\n\t\t\t\tpassword: password,\r\n\t\t\t});\r\n\t\t\tconsole.log(data);\r\n\t\t\tif (error) {\r\n\t\t\t\tawait showToast({\r\n\t\t\t\t\tmessage: \"Error to signUp\",\r\n\t\t\t\t\tduration: 2000,\r\n\t\t\t\t\tcolor: \"danger\",\r\n\t\t\t\t});\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t} else {\r\n\t\t\t\tsetPassword(\"\");\r\n\t\t\t\tsetEmail(\"\");\r\n\t\t\t\tawait showToast({\r\n\t\t\t\t\tmessage: \"success. Verifie votre email\",\r\n\t\t\t\t\tduration: 2000,\r\n\t\t\t\t\tcolor: \"success\",\r\n\t\t\t\t});\r\n\t\t\t\thistory.push(\"/profile\");\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tawait showToast({\r\n\t\t\t\tmessage: \"Error to sigUp\",\r\n\t\t\t\tduration: 2000,\r\n\t\t\t\tcolor: \"danger\",\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst showPasswordHandler = () => {\r\n\t\tsetShowPassword(!showPassword);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<IonPage>\r\n\t\t\t<IonContent>\r\n\t\t\t\t<LogoGaborComponent />\r\n\t\t\t\t<IonText className=\"ion-text-center\">\r\n\t\t\t\t\t<h1 className=\"text-title\">Inscription</h1>\r\n\t\t\t\t</IonText>\r\n\t\t\t\t<InputComponent\r\n\t\t\t\t\tclassP=\"login-input\"\r\n\t\t\t\t\tlabelP=\"Email\"\r\n\t\t\t\t\ttypeP=\"email\"\r\n\t\t\t\t\ticonName={mail}\r\n\t\t\t\t\tplaceholderP=\"email@domain.com\"\r\n\t\t\t\t\tvalueP={email}\r\n\t\t\t\t\tonChange={(e: any) => setEmail(e.detail.value || \"\")}\r\n\t\t\t\t\tclassI=\"custom-input\"\r\n\t\t\t\t\tclassIcon=\"login-icon ion-icon\"\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<InputComponent\r\n\t\t\t\t\tclassP=\"login-input input-pass\"\r\n\t\t\t\t\tlabelP=\"Mot de passe\"\r\n\t\t\t\t\ttypeP={showPassword ? \"text\" : \"password\"}\r\n\t\t\t\t\tplaceholderP=\"********\"\r\n\t\t\t\t\tvalueP={password}\r\n\t\t\t\t\tonChange={(e: any) => setPassword(e.detail.value || \"\")}\r\n\t\t\t\t\tclassI=\"custom-input\"\r\n\t\t\t\t\ticonName={bloquer}\r\n\t\t\t\t\tclassIcon=\"login-icon ion-icon\"\r\n\t\t\t\t\tonIconClick={showPasswordHandler}\r\n\t\t\t\t\ticonP={showPassword ? showP : hideP}\r\n\t\t\t\t/>\r\n\t\t\t\t<ButtonComponent\r\n\t\t\t\t\tclassP=\"ion-margin-horizontal ion-padding-horizontal\"\r\n\t\t\t\t\ttext=\"S'inscrire\"\r\n\t\t\t\t\tonClick={handleLogin}\r\n\t\t\t\t/>\r\n\t\t\t</IonContent>\r\n\t\t</IonPage>\r\n\t);\r\n};\r\n\r\nexport default RegisterUser;\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\pages\\events\\MyFeedPage.tsx","messages":[{"ruleId":"react/no-unescaped-entities","severity":2,"message":"`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","line":69,"column":46,"nodeType":"JSXText","messageId":"unescapedEntityAlts"}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n\tIonPage,\r\n\tIonContent,\r\n\tIonCard,\r\n\tIonCardContent,\r\n\tIonCardHeader,\r\n\tIonCardTitle,\r\n\tIonModal,\r\n\tIonIcon,\r\n\tIonButton,\r\n\tIonRefresher,\r\n\tIonRefresherContent,\r\n\tIonAvatar,\r\n\tIonLabel,\r\n} from \"@ionic/react\";\r\nimport { getNewsForUser } from \"../../services/newsService\";\r\nimport { News } from \"../../models/News\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport { closeCircle } from \"ionicons/icons\";\r\nimport logo from \"../../assets/logo_Gabor45_notxt.svg\";\r\nimport \"../farmers/NewsFarmerPage.css\";\r\nimport \"../../components/LoadingScreen.css\";\r\nimport \"./MyFeedPage.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst MyFeedPage: React.FC = () => {\r\n\tconst user = useAuth();\r\n\tconst [newsList, setNewsList] = useState<News[]>([]);\r\n\tconst [showModal, setShowModal] = useState(false);\r\n\tconst [selectedImage, setSelectedImage] = useState(\"\");\r\n\tconst [isRefreshing, setIsRefreshing] = useState(false);\r\n\tconst history = useHistory();\r\n\r\n\tconst openImageModal = (imageUrl: string) => {\r\n\t\tsetSelectedImage(imageUrl);\r\n\t\tsetShowModal(true);\r\n\t};\r\n\r\n\tconst closeModal = () => {\r\n\t\tsetShowModal(false);\r\n\t};\r\n\r\n\tconst handleModalContentClick = (e: React.MouseEvent) => {\r\n\t\te.stopPropagation();\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchNews = async () => {\r\n\t\t\tif (user) {\r\n\t\t\t\tconst newsFromService = await getNewsForUser(user.id);\r\n\t\t\t\tsetNewsList(newsFromService);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfetchNews();\r\n\t}, [user]);\r\n\r\n\t// Define the base URL for the images\r\n\tconst baseUrl =\r\n\t\t\"https://sktoqgbcjidoohzeobcz.supabase.co/storage/v1/object/public/news/images/\";\r\n\tconst user_baseUrl =\r\n\t\t\"https://sktoqgbcjidoohzeobcz.supabase.co/storage/v1/object/public/avatars/agri/\";\r\n\r\n\tif (!user) {\r\n\t\treturn (\r\n\t\t\t<IonPage>\r\n\t\t\t\t<IonContent className=\"ion-padding\">\r\n\t\t\t\t\t<h2>Connectez-vous pour voir votre fil d'actualité</h2>\r\n\t\t\t\t\t<IonButton routerLink=\"/login\">Se connecter</IonButton>\r\n\t\t\t\t</IonContent>\r\n\t\t\t</IonPage>\r\n\t\t);\r\n\t}\r\n\r\n\tconst doRefresh = (event: CustomEvent) => {\r\n\t\tsetIsRefreshing(true);\r\n\t\tfetchNews().then(() => {\r\n\t\t\tevent.detail.complete();\r\n\t\t\tsetIsRefreshing(false);\r\n\t\t});\r\n\t};\r\n\r\n\tconst fetchNews = async () => {\r\n\t\t// Fonction to get the news for the user\r\n\t\tif (user) {\r\n\t\t\tconst newsFromService = await getNewsForUser(user.id);\r\n\t\t\tsetNewsList(newsFromService);\r\n\t\t}\r\n\t};\r\n\r\n\t//function to handle click on farmer card and redirect to farmer page\r\n\tconst redirectToFarmerProfile = (farmerId: string) => {\r\n\t\tconsole.log(\"id: \", farmerId);\r\n\t\thistory.push({\r\n\t\t\tpathname: `/farmers/producteurs/${farmerId}`,\r\n\t\t\tstate: { farmerId: farmerId },\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<IonPage>\r\n\t\t\t<IonContent>\r\n\t\t\t\t<IonRefresher slot=\"fixed\" onIonRefresh={doRefresh}>\r\n\t\t\t\t\t<IonRefresherContent pullingText=\"Tirez pour rafraîchir\" />\r\n\t\t\t\t</IonRefresher>\r\n\r\n\t\t\t\t{isRefreshing && (\r\n\t\t\t\t\t<div className=\"loading-container\">\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tsrc={logo}\r\n\t\t\t\t\t\t\talt=\"Loading...\"\r\n\t\t\t\t\t\t\tclassName=\"loading-logo-fast\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{newsList.map((newsItem: News) => (\r\n\t\t\t\t\t<IonCard key={newsItem.id_evenement}>\r\n\t\t\t\t\t\t<IonCardHeader>\r\n\t\t\t\t\t\t\t<IonCardTitle>\r\n\t\t\t\t\t\t\t\t<div className=\"title_containter\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"avatar-container\">\r\n\t\t\t\t\t\t\t\t\t\t<IonAvatar>\r\n\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={`${user_baseUrl}${newsItem.lien_image_user}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\talt=\"Profile\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tredirectToFarmerProfile(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewsItem.id_agriculteur\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</IonAvatar>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<IonLabel>\r\n\t\t\t\t\t\t\t\t\t\t{newsItem.nom_evenement}\r\n\t\t\t\t\t\t\t\t\t</IonLabel>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</IonCardTitle>\r\n\t\t\t\t\t\t</IonCardHeader>\r\n\r\n\t\t\t\t\t\t<IonCardContent>\r\n\t\t\t\t\t\t\t{newsItem.image && (\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tsrc={`${baseUrl}${newsItem.image}`}\r\n\t\t\t\t\t\t\t\t\talt={newsItem.nom_evenement}\r\n\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\topenImageModal(\r\n\t\t\t\t\t\t\t\t\t\t\t`${baseUrl}${newsItem.image}`\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{newsItem.description}\r\n\t\t\t\t\t\t</IonCardContent>\r\n\t\t\t\t\t</IonCard>\r\n\t\t\t\t))}\r\n\r\n\t\t\t\t<IonModal\r\n\t\t\t\t\tisOpen={showModal}\r\n\t\t\t\t\tonDidDismiss={closeModal}\r\n\t\t\t\t\tclassName=\"my-custom-class\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"modal-content\" onClick={closeModal}>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName=\"modal-image-container\"\r\n\t\t\t\t\t\t\tonClick={handleModalContentClick}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<IonIcon\r\n\t\t\t\t\t\t\t\ticon={closeCircle}\r\n\t\t\t\t\t\t\t\tclassName=\"close-icon\"\r\n\t\t\t\t\t\t\t\tonClick={closeModal}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={selectedImage}\r\n\t\t\t\t\t\t\t\talt=\"Zoomed in\"\r\n\t\t\t\t\t\t\t\tclassName=\"zoomed-in-image\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</IonModal>\r\n\t\t\t</IonContent>\r\n\t\t</IonPage>\r\n\t);\r\n};\r\n\r\nexport default MyFeedPage;\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\pages\\farmers\\FarmerCategories.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'selectedCategory' is defined but never used. Allowed unused args must match /^_/u.","line":29,"column":2,"nodeType":"Identifier","messageId":"unusedVar","endLine":29,"endColumn":18},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'history' is assigned a value but never used.","line":34,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":34,"endColumn":15}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// React and React Router\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// Ionic Components\r\nimport {\r\n\tIonList,\r\n\tIonCard,\r\n\tIonCardContent,\r\n\tIonContent,\r\n\tIonCardTitle,\r\n} from \"@ionic/react\";\r\n\r\n// Services\r\nimport { getAllCategories } from \"../../services/categoryService\";\r\nimport LoadingScreen from \"../../components/LoadingScreen\";\r\nimport { Categories } from \"../../models/Categories\";\r\n\r\n// Custom Styling\r\nimport \"./Farmers.css\";\r\n\r\n// interface for the props of the component\r\ninterface FarmerCategoriesProps {\r\n\tselectedCategory: string | null;\r\n\tonSelectCategory: (category: string) => void;\r\n}\r\n\r\nconst FarmerCategories: React.FC<FarmerCategoriesProps> = ({\r\n\tselectedCategory,\r\n\tonSelectCategory,\r\n}) => {\r\n\tconst [categories, setCategories] = useState<Categories[]>([]);\r\n\tconst [isLoading, setIsLoading] = useState<boolean>(true);\r\n\tconst history = useHistory();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchData = async () => {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\ttry {\r\n\t\t\t\tconst data = await getAllCategories();\r\n\t\t\t\tconsole.log(\"data\", data);\r\n\t\t\t\tsetCategories(data || []);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(\"Error fetching categories\", error);\r\n\t\t\t}\r\n\t\t\tsetIsLoading(false);\r\n\t\t};\r\n\r\n\t\tfetchData().then((r) => console.log(\"data\", r));\r\n\t}, []);\r\n\r\n\tconst baseUrl =\r\n\t\t\"https://sktoqgbcjidoohzeobcz.supabase.co/storage/v1/object/public/categories/images/\";\r\n\r\n\tconst handleCardClick = (categoryId: string) => {\r\n\t\tconsole.log(\"id: \", categoryId);\r\n\t\tonSelectCategory(categoryId);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<IonContent>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<LoadingScreen />\r\n\t\t\t) : (\r\n\t\t\t\t<IonList className=\"categories-card\">\r\n\t\t\t\t\t{categories.map((category) => (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tkey={category.id_categorie}\r\n\t\t\t\t\t\t\tclassName=\"category-container\"\r\n\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\thandleCardClick(category.id_categorie)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<IonCard className=\"category-card\">\r\n\t\t\t\t\t\t\t\t<IonCardContent className=\"category-content\">\r\n\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"categorie_img\"\r\n\t\t\t\t\t\t\t\t\t\tsrc={`${baseUrl}${category.lien_image}`}\r\n\t\t\t\t\t\t\t\t\t\talt=\"Image de la categorie\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</IonCardContent>\r\n\t\t\t\t\t\t\t\t<IonCardTitle class=\"ion-text-center category-title ion-margin-horizontal\">\r\n\t\t\t\t\t\t\t\t\t{category.name}\r\n\t\t\t\t\t\t\t\t</IonCardTitle>\r\n\t\t\t\t\t\t\t</IonCard>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</IonList>\r\n\t\t\t)}\r\n\t\t</IonContent>\r\n\t);\r\n};\r\n\r\nexport default FarmerCategories;\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\pages\\farmers\\FarmerDetailPage.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'error' is assigned a value but never used.","line":84,"column":20,"nodeType":"Identifier","messageId":"unusedVar","endLine":84,"endColumn":25},{"ruleId":"@typescript-eslint/ban-ts-comment","severity":2,"message":"Use \"@ts-expect-error\" instead of \"@ts-ignore\", as \"@ts-ignore\" will do nothing if the following line is error-free.","line":108,"column":5,"nodeType":"Line","messageId":"tsIgnoreInsteadOfExpectError","endLine":108,"endColumn":18,"suggestions":[{"messageId":"replaceTsIgnoreWithTsExpectError","fix":{"range":[3124,3137],"text":"// @ts-expect-error"},"desc":"Replace \"@ts-ignore\" with \"@ts-expect-error\"."}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'blah' is defined but never used. Allowed unused args must match /^_/u.","line":301,"column":17,"nodeType":"Identifier","messageId":"unusedVar","endLine":301,"endColumn":21}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// React and React Router\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\n// Ionic Framework Components\r\nimport {\r\n\tIonPage,\r\n\tIonIcon,\r\n\tIonBackButton,\r\n\tIonButtons,\r\n\tIonAlert,\r\n} from \"@ionic/react\";\r\nimport { newspaperOutline } from \"ionicons/icons\";\r\n\r\n// Services and Models\r\nimport { Farmer } from \"../../models/Farmer\";\r\nimport { getUserWithFarmer } from \"../../services/farmerDetailService\";\r\nimport { Horaires } from \"../../models/Horaires\";\r\nimport { getHorairesFerme } from \"../../services/horaires_point_de_vente\";\r\nimport { followFarmer, unfollowFarmer } from \"../../services/follow_service\";\r\nimport { User } from \"@supabase/supabase-js\";\r\n\r\n// Supabase Client\r\nimport { supabase } from \"../../supabaseClient\";\r\n\r\n// Custom Components and Styling\r\nimport LoadingScreen from \"../../components/LoadingScreen\";\r\nimport \"./FarmerDetailPage.css\";\r\n\r\n// Icons\r\nimport facebookIcon from \"../../icons/facebook_mini.svg\";\r\nimport instagramIcon from \"../../icons/instagram_mini.svg\";\r\nimport globeIcon from \"../../icons/globe.svg\";\r\n\r\nconst Farmer_detail_page: React.FC = () => {\r\n\tconst baseUrl =\r\n\t\t\"https://sktoqgbcjidoohzeobcz.supabase.co/storage/v1/object/public/avatars/agri/\";\r\n\tconst { farmerId } = useParams<{ farmerId: string }>();\r\n\tconst [data, setData] = useState<Farmer | null>(null);\r\n\tconst [isLoading, setIsLoading] = useState<boolean>(true);\r\n\tconst [showLoginAlert, setShowLoginAlert] = useState(false);\r\n\tconst [user, setUser] = useState<User | null>(null);\r\n\tconst history = useHistory();\r\n\r\n\tconst [isFollowing, setIsFollowing] = useState(false);\r\n\r\n\tconst [horairesList, setHorairesList] = useState<Horaires[]>([]);\r\n\r\n\tconst handleFollow = async () => {\r\n\t\tif (user) {\r\n\t\t\ttry {\r\n\t\t\t\tawait followFarmer(user.id, farmerId);\r\n\t\t\t\tconsole.log(\"Agriculteur suivi!\");\r\n\t\t\t\tsetIsFollowing(true);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(\"Erreur lors du suivi de l'agriculteur:\", error);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetShowLoginAlert(true);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleUnfollow = async () => {\r\n\t\tif (user) {\r\n\t\t\ttry {\r\n\t\t\t\tawait unfollowFarmer(user.id, farmerId);\r\n\t\t\t\tconsole.log(\"Vous ne suivez plus cet agriculteur.\");\r\n\t\t\t\tsetIsFollowing(false);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(\r\n\t\t\t\t\t\"Erreur lors de l'arrêt du suivi de l'agriculteur:\",\r\n\t\t\t\t\terror\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetShowLoginAlert(true);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst checkIfUserIsFollowing = async () => {\r\n\t\t\tif (user && farmerId) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst { data, error } = await supabase\r\n\t\t\t\t\t\t.from(\"follow\")\r\n\t\t\t\t\t\t.select(\"*\")\r\n\t\t\t\t\t\t.eq(\"id_utilisateur\", user.id)\r\n\t\t\t\t\t\t.eq(\"id_agriculteur\", farmerId)\r\n\t\t\t\t\t\t.maybeSingle();\r\n\r\n\t\t\t\t\tsetIsFollowing(!!data);\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.error(\r\n\t\t\t\t\t\t\"Erreur lors de la vérification du suivi:\",\r\n\t\t\t\t\t\terror\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tcheckIfUserIsFollowing().then((r) => console.log(r));\r\n\t}, [user, farmerId]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst { data: authListener } = supabase.auth.onAuthStateChange(\r\n\t\t\tasync (event, session) => {\r\n\t\t\t\tconst currentUser = session?.user;\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetUser(currentUser);\r\n\t\t\t}\r\n\t\t);\r\n\t\tconst fetchData = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst userData = await getUserWithFarmer(farmerId);\r\n\t\t\t\tsetData(userData);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(\"Failed to fetch data:\", error);\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfetchData().then((r) => console.log(r));\r\n\r\n\t\treturn () => {\r\n\t\t\tauthListener?.subscription.unsubscribe();\r\n\t\t};\r\n\t}, [farmerId]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchHoraires = async () => {\r\n\t\t\tconst horairesFromService = await getHorairesFerme(farmerId);\r\n\t\t\tsetHorairesList(horairesFromService);\r\n\t\t};\r\n\t\tfetchHoraires();\r\n\t}, [farmerId]);\r\n\r\n\treturn (\r\n\t\t<IonPage>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<LoadingScreen />\r\n\t\t\t) : data ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"image_mask\">\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tclassName=\"farmer_img_round\"\r\n\t\t\t\t\t\t\tsrc={`${baseUrl}${data.lien_image_user}`}\r\n\t\t\t\t\t\t\talt=\"Image de l'agriculteur\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<IonButtons slot=\"start\" className=\"back_button\">\r\n\t\t\t\t\t\t<IonBackButton defaultHref=\"/farmer\" /> {}\r\n\t\t\t\t\t</IonButtons>\r\n\t\t\t\t\t<div className=\"header-container\">\r\n\t\t\t\t\t\t<h1>{data.nom_ferme}</h1>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"button_rows\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName={`follow_button ${\r\n\t\t\t\t\t\t\t\tisFollowing ? \"followed\" : \"\"\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tonClick={\r\n\t\t\t\t\t\t\t\tisFollowing ? handleUnfollow : handleFollow\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{isFollowing ? \"Suivi\" : \"Suivre\"}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\thistory.push(\r\n\t\t\t\t\t\t\t\t\t`/farmers/producteurs/${farmerId}/news`\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<IonIcon slot=\"start\" icon={newspaperOutline} />\r\n\t\t\t\t\t\t\tNews\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"page_content\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t{data.nom} {data.prenom}\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"social-media-links\">\r\n\t\t\t\t\t\t\t{data.facebook && (\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\thref={data.facebook}\r\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\tsrc={facebookIcon}\r\n\t\t\t\t\t\t\t\t\t\talt=\"Facebook\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"icon-svg\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{data.instagram && (\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\thref={data.instagram}\r\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\tsrc={instagramIcon}\r\n\t\t\t\t\t\t\t\t\t\talt=\"Instagram\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"icon-svg\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{data.website && (\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\thref={`https://${data.website}`}\r\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\tsrc={globeIcon}\r\n\t\t\t\t\t\t\t\t\t\talt=\"Website\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"icon-svg\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<p className=\"production\">\r\n\t\t\t\t\t\t\t\t<b>Production : </b>\r\n\t\t\t\t\t\t\t\t{data.description}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t{horairesList != null && (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<b>Horaires : </b>\r\n\t\t\t\t\t\t\t\t<table className=\"horaires\">\r\n\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t{horairesList &&\r\n\t\t\t\t\t\t\t\t\t\t\thorairesList.map(\r\n\t\t\t\t\t\t\t\t\t\t\t\t(horairesItem: Horaires) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thorairesItem.id_horaires\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thorairesItem.jour\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</b>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t:{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{horairesItem.heure_debut_matin?.slice(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t5\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t-\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{horairesItem.heure_fin_matin?.slice(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t5\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{horairesItem.heure_debut_apres_midi?.slice(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t5\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t-\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{horairesItem.heure_fin_apres_midi?.slice(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t5\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<LoadingScreen />\r\n\t\t\t)}\r\n\t\t\t<IonAlert\r\n\t\t\t\tisOpen={showLoginAlert}\r\n\t\t\t\tonDidDismiss={() => setShowLoginAlert(false)}\r\n\t\t\t\theader={\"Connexion requise\"}\r\n\t\t\t\tmessage={\r\n\t\t\t\t\t\"Vous devez être connecté pour suivre cet agriculteur.\"\r\n\t\t\t\t}\r\n\t\t\t\tbuttons={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttext: \"Annuler\",\r\n\t\t\t\t\t\trole: \"cancel\",\r\n\t\t\t\t\t\tcssClass: \"secondary\",\r\n\t\t\t\t\t\thandler: (blah) => {\r\n\t\t\t\t\t\t\tconsole.log(\"Confirm Cancel\");\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttext: \"Se connecter\",\r\n\t\t\t\t\t\thandler: () => {\r\n\t\t\t\t\t\t\thistory.push(\"/login\");\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t/>\r\n\t\t</IonPage>\r\n\t);\r\n};\r\n\r\nexport default Farmer_detail_page;\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\pages\\farmers\\FarmerProduit.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":53,"column":31,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":53,"endColumn":34,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1346,1349],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1346,1349],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// React and React Router\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\n// Ionic Framework Components\r\nimport {\r\n\tIonList,\r\n\tIonCard,\r\n\tIonCardContent,\r\n\tIonContent,\r\n\tIonCardHeader,\r\n\tIonCardTitle,\r\n\tIonTitle,\r\n} from \"@ionic/react\";\r\n\r\n// Services and Models\r\nimport { Farmer } from \"../../models/Farmer\";\r\nimport {\r\n\tgetUsersWithFarmersByCategory,\r\n\tgetCategories,\r\n} from \"../../services/farmerServiceCategory\";\r\n\r\nconst FarmerProduit = () => {\r\n\tconst [farmers, setFarmers] = useState<Farmer[]>([]);\r\n\tconst history = useHistory();\r\n\tconst [categories, setCategories] = useState<[]>([]);\r\n\tuseEffect(() => {\r\n\t\tconst fetchData = async () => {\r\n\t\t\tconst data = await getUsersWithFarmersByCategory();\r\n\t\t\tsetFarmers(data);\r\n\r\n\t\t\tconst categories = await getCategories(data);\r\n\t\t\tsetCategories(categories);\r\n\t\t\tconsole.log(\"categories tsx: \", categories);\r\n\t\t};\r\n\r\n\t\tfetchData().then((r) => console.log(\"data\", r));\r\n\t}, []);\r\n\r\n\tconst handleCardClick = (farmerId: string) => {\r\n\t\tconsole.log(\"id: \", farmerId);\r\n\t\thistory.push({\r\n\t\t\tpathname: `/farmers/produits/${farmerId}`,\r\n\t\t\tstate: { farmerId: farmerId },\r\n\t\t});\r\n\t};\r\n\r\n\tconst baseUrl =\r\n\t\t\"https://sktoqgbcjidoohzeobcz.supabase.co/storage/v1/object/public/avatars/agri/\";\r\n\r\n\treturn (\r\n\t\t<IonContent>\r\n\t\t\t{categories.map((category: any) => (\r\n\t\t\t\t<div key={category}>\r\n\t\t\t\t\t<IonTitle>{category}</IonTitle>\r\n\t\t\t\t\t<IonList>\r\n\t\t\t\t\t\t{farmers\r\n\t\t\t\t\t\t\t.filter(\r\n\t\t\t\t\t\t\t\t(farmer) =>\r\n\t\t\t\t\t\t\t\t\tfarmer.type_produit_principal === category\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t.map((farmer) => (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tkey={farmer.id_utilisateur}\r\n\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\thandleCardClick(farmer.id_utilisateur)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<IonCard className=\"farmer-card\">\r\n\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"farmer_img\"\r\n\t\t\t\t\t\t\t\t\t\t\tsrc={`${baseUrl}${farmer.lien_image_user}`}\r\n\t\t\t\t\t\t\t\t\t\t\talt=\"Image de l'agriculteur\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"farmer-info\">\r\n\t\t\t\t\t\t\t\t\t\t\t<IonCardHeader>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<IonCardTitle>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{farmer.nom_ferme}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</IonCardTitle>\r\n\t\t\t\t\t\t\t\t\t\t\t</IonCardHeader>\r\n\t\t\t\t\t\t\t\t\t\t\t<IonCardContent>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfarmer.type_produit_principal\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{farmer.prenom} {farmer.nom}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t</IonCardContent>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</IonCard>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t</IonList>\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</IonContent>\r\n\t);\r\n};\r\n\r\nexport default FarmerProduit;\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\pages\\farmers\\Farmers.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'sleep' is defined but never used.","line":66,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":66,"endColumn":15},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'destination' is assigned a value but never used.","line":116,"column":11,"nodeType":"Identifier","messageId":"unusedVar","endLine":116,"endColumn":22},{"ruleId":"@typescript-eslint/ban-ts-comment","severity":2,"message":"Use \"@ts-expect-error\" instead of \"@ts-ignore\", as \"@ts-ignore\" will do nothing if the following line is error-free.","line":121,"column":5,"nodeType":"Line","messageId":"tsIgnoreInsteadOfExpectError","endLine":121,"endColumn":18,"suggestions":[{"messageId":"replaceTsIgnoreWithTsExpectError","fix":{"range":[3575,3588],"text":"// @ts-expect-error"},"desc":"Replace \"@ts-ignore\" with \"@ts-expect-error\"."}]}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// React and React Router\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// Ionic Framework Components\r\nimport {\r\n\tIonContent,\r\n\tIonCard,\r\n\tIonCardHeader,\r\n\tIonCardTitle,\r\n\tIonCardContent,\r\n\tIonList,\r\n} from \"@ionic/react\";\r\n\r\n// Services and Models\r\nimport { Farmer } from \"../../models/Farmer\";\r\nimport { getUsersWithFarmers } from \"../../services/farmerService\";\r\n\r\n// Custom Components and Styling\r\nimport \"./Farmers.css\";\r\nimport LoadingScreen from \"../../components/LoadingScreen\";\r\n\r\n// Capacitor Geolocation\r\nimport { Geolocation } from \"@capacitor/geolocation\";\r\n\r\nfunction calculateDistance(\r\n\tlat1: number | null,\r\n\tlon1: number | null,\r\n\tlat2: number | null,\r\n\tlon2: number | null\r\n) {\r\n\tif (lat1 === null || lon1 === null || lat2 === null || lon2 === null) {\r\n\t\treturn null;\r\n\t} else {\r\n\t\tconst R = 6371; // Earth radius in km\r\n\t\tconst dLat = toRad(lat2 - lat1);\r\n\t\tconst dLon = toRad(lon2 - lon1);\r\n\t\tconst a =\r\n\t\t\tMath.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n\t\t\tMath.cos(toRad(lat1)) *\r\n\t\t\t\tMath.cos(toRad(lat2)) *\r\n\t\t\t\tMath.sin(dLon / 2) *\r\n\t\t\t\tMath.sin(dLon / 2);\r\n\t\tconst c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n\t\tconst distance = R * c; // Distance in km\r\n\t\treturn Math.round(distance);\r\n\t}\r\n}\r\n\r\nfunction toRad(value: number) {\r\n\treturn (value * Math.PI) / 180;\r\n}\r\n\r\nimport { Capacitor } from \"@capacitor/core\";\r\n\r\nasync function requestLocationPermission() {\r\n\ttry {\r\n\t\tif (Capacitor.getPlatform() !== \"web\") {\r\n\t\t\tawait Geolocation.requestPermissions();\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tconsole.error(\"Error requesting location permissions\", error);\r\n\t}\r\n}\r\n\r\nfunction sleep(ms: number | undefined) {\r\n\treturn new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\n\r\nconst FarmerPage: React.FC = () => {\r\n    const [farmers, setFarmers] = useState<Farmer[]>([]);\r\n    const [userLocation, setUserLocation] = useState<{ latitude: number; longitude: number } | null>(null);\r\n    const history = useHistory();\r\n    const [isLoading, setIsLoading] = useState<boolean>(true);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setIsLoading(true);\r\n            try {\r\n                const data = await getUsersWithFarmers();\r\n                setFarmers(data);\r\n            } catch (error) {\r\n                console.error('Error fetching farmers', error);\r\n            }\r\n            setIsLoading(false);\r\n        };\r\n\r\n        requestLocationPermission().then(r => console.log(r));\r\n\r\n        const getLocation = async () => {\r\n            setIsLoading(true);\r\n            try {\r\n                await requestLocationPermission();\r\n                const coordinates = await Geolocation.getCurrentPosition();\r\n                setUserLocation({\r\n                    latitude: coordinates.coords.latitude,\r\n                    longitude: coordinates.coords.longitude,\r\n                });\r\n            } catch (err) {\r\n                console.error('Could not get user location', err);\r\n            }\r\n            setIsLoading(false);\r\n        };\r\n\r\n        fetchData().then(r => console.log(r));\r\n        getLocation().then(r => console.log(r));\r\n    }, []);\r\n\r\n    const handleCardClick = (farmerId: string) => {\r\n        history.push({\r\n            pathname: `/farmers/producteurs/${farmerId}`,\r\n            state: { farmerId: farmerId }\r\n        });\r\n    };\r\n\r\n    const destination = { latitude: 48.85835473209913, longitude: 2.2944613664788105 };\r\n\r\n\r\n    const baseUrl = \"https://sktoqgbcjidoohzeobcz.supabase.co/storage/v1/object/public/avatars/agri/\";\r\n\r\n    // @ts-ignore\r\n    return (\r\n            <IonContent>\r\n                {isLoading ? (\r\n                    <LoadingScreen />\r\n                ) : (\r\n\r\n                <IonList className=\"farmer_list\">\r\n                    {farmers.map(farmer => (\r\n                        <div key={farmer.id_utilisateur} onClick={() => handleCardClick(farmer.id_utilisateur)}>\r\n                            <IonCard className=\"farmer-card\">\r\n                                <img className=\"farmer_img\" src={`${baseUrl}${farmer.lien_image_user}`} alt=\"Image de l'agriculteur\" />\r\n                                <div className=\"farmer-info\">\r\n                                    <IonCardHeader>\r\n                                        <IonCardTitle className=\"farm_name\">{farmer.nom_ferme}</IonCardTitle>\r\n                                    </IonCardHeader>\r\n                                    <IonCardContent className=\"card_content\">\r\n                                        <p className=\"produit_principal\">{farmer.type_produit_principal}</p>\r\n                                        <p className=\"nom_prenom_agri\">\r\n                                            {farmer.prenom} {farmer.nom}</p>\r\n                                        {userLocation && (\r\n                                            <p className=\"distance\">\r\n                                                {calculateDistance(farmer.latitude, farmer.longitude, userLocation.latitude, userLocation.longitude)} km\r\n                                            </p>\r\n                                        )}\r\n                                    </IonCardContent>\r\n                                </div>\r\n                            </IonCard>\r\n\r\n                        </div>\r\n                    ))}\r\n                </IonList>\r\n                )}\r\n            </IonContent>\r\n    );\r\n};\r\n\r\nexport default FarmerPage;\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\pages\\farmers\\FarmersByCategory.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'setUserLocation' is assigned a value but never used.","line":58,"column":23,"nodeType":"Identifier","messageId":"unusedVar","endLine":58,"endColumn":38}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// React and React Router\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n\tIonList,\r\n\tIonCard,\r\n\tIonCardContent,\r\n\tIonContent,\r\n\tIonCardHeader,\r\n\tIonCardTitle,\r\n\tIonText,\r\n} from \"@ionic/react\";\r\n\r\n// Models and Services\r\nimport { Farmer } from \"../../models/Farmer\";\r\nimport { getUsersWithFarmersByCategory } from \"../../services/CategorieService\";\r\n\r\n// Custom Components\r\nimport LoadingScreen from \"../../components/LoadingScreen\";\r\n\r\n//Custom Styling\r\nimport \"./Categories.css\";\r\n\r\nfunction calculateDistance(\r\n\tlat1: number | null,\r\n\tlon1: number | null,\r\n\tlat2: number | null,\r\n\tlon2: number | null\r\n) {\r\n\tif (lat1 === null || lon1 === null || lat2 === null || lon2 === null) {\r\n\t\treturn null;\r\n\t} else {\r\n\t\tconst R = 6371; // Earth radius in km\r\n\t\tconst dLat = toRad(lat2 - lat1);\r\n\t\tconst dLon = toRad(lon2 - lon1);\r\n\t\tconst a =\r\n\t\t\tMath.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n\t\t\tMath.cos(toRad(lat1)) *\r\n\t\t\t\tMath.cos(toRad(lat2)) *\r\n\t\t\t\tMath.sin(dLon / 2) *\r\n\t\t\t\tMath.sin(dLon / 2);\r\n\t\tconst c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n\t\tconst distance = R * c; // Distance in km\r\n\t\treturn Math.round(distance);\r\n\t}\r\n}\r\nfunction toRad(value: number) {\r\n\treturn (value * Math.PI) / 180;\r\n}\r\n\r\nconst FarmersByCategory: React.FC<{ categoryId: string }> = ({\r\n\tcategoryId,\r\n}) => {\r\n\tconst [data, setData] = useState<Farmer[]>([]);\r\n\tconst [isLoading, setIsLoading] = useState<boolean>(true);\r\n\tconst history = useHistory();\r\n\tconst [userLocation, setUserLocation] = useState<{\r\n\t\tlatitude: number;\r\n\t\tlongitude: number;\r\n\t} | null>(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchData = async () => {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\tconst cate = await getUsersWithFarmersByCategory(categoryId);\r\n\t\t\tconsole.log(\"data: \", cate);\r\n\t\t\tsetData(cate);\r\n\t\t\tsetIsLoading(false);\r\n\t\t};\r\n\r\n\t\tfetchData().then((r) => console.log(\"data\", r));\r\n\t}, []);\r\n\tconst baseUrl =\r\n\t\t\"https://sktoqgbcjidoohzeobcz.supabase.co/storage/v1/object/public/avatars/agri/\";\r\n\r\n\tconst handleCardClick = (categoryId: string) => {\r\n\t\tconsole.log(\"id: \", categoryId);\r\n\t\thistory.push({});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<IonContent>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<LoadingScreen />\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{data != null ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<div className=\"header-content\">\r\n\t\t\t\t\t\t\t\t<IonText className=\"title-category\">\r\n\t\t\t\t\t\t\t\t\tAgriculteurs producteurs de :{\" \"}\r\n\t\t\t\t\t\t\t\t</IonText>\r\n\t\t\t\t\t\t\t\t<IonText className=\"button-category\">\r\n\t\t\t\t\t\t\t\t\t{data[0].type_produit_principal}\r\n\t\t\t\t\t\t\t\t</IonText>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<IonList>\r\n\t\t\t\t\t\t\t\t{data.map((farmer) => (\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tkey={farmer.id_utilisateur}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\thandleCardClick(\r\n\t\t\t\t\t\t\t\t\t\t\t\tfarmer.id_utilisateur\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<IonCard className=\"farmer-card\">\r\n\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"farmer_img\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={`${baseUrl}${farmer.lien_image_user}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\talt=\"Image de l'agriculteur\"\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"farmer-info\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<IonCardHeader>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<IonCardTitle className=\"farm_name\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{farmer.nom_ferme}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</IonCardTitle>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</IonCardHeader>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<IonCardContent>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"produit_principal\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfarmer.type_produit_principal\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"nom_prenom_agri\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{farmer.prenom}{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{farmer.nom}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{userLocation && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"distance\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{calculateDistance(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfarmer.latitude,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfarmer.longitude,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tuserLocation.latitude,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tuserLocation.longitude\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkm\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</IonCardContent>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</IonCard>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</IonList>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\tAucun agriculteur disponible dans cette catégorie.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</IonContent>\r\n\t);\r\n};\r\n\r\nexport default FarmersByCategory;\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\pages\\farmers\\FarmersSearch.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\pages\\farmers\\IndexFarmers.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'useParams' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":19},{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":48,"column":30,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":48,"endColumn":33,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1342,1345],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1342,1345],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":75,"column":37,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":75,"endColumn":40,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1967,1970],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1967,1970],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":93,"column":27,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":93,"endColumn":30,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2369,2372],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2369,2372],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"//React and React Router\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\n\r\n// Ionic Framework Components\r\nimport {\r\n\tIonContent,\r\n\tIonPage,\r\n\tIonSearchbar,\r\n\tIonToolbar,\r\n\tIonIcon,\r\n\tIonItem,\r\n\tIonGrid,\r\n\tIonRow,\r\n\tIonCol,\r\n\tIonText,\r\n\tIonHeader,\r\n} from \"@ionic/react\";\r\n\r\n// Custom Components and Styling\r\nimport FarmerPage from \"./Farmers\";\r\nimport \"./Farmers.css\";\r\nimport arrowLeft from \"../../icons/arrowLeft.svg\";\r\nimport search from \"../../icons/search.svg\";\r\nimport FarmerCategories from \"./FarmerCategories\";\r\nimport FarmerSearchPage from \"./FarmersSearch\";\r\nimport FarmersByCategory from \"./FarmersByCategory\";\r\n\r\nconst IndexFarmers: React.FC = () => {\r\n\tconst [page, setPage] = useState<string>(\"producteurs\");\r\n\tconst [searchQuery, setSearchQuery] = useState<string>(\"\");\r\n\tconst [isActive, setIsActive] = useState([true, false]);\r\n\tconst [selectedCategory, setSelectedCategory] = useState<string | null>(\r\n\t\tnull\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\t// reset the page when the component is loaded\r\n\t\tconst handleBeforeUnload = () => {\r\n\t\t\tsetPage(\"producteurs\");\r\n\t\t\tsetSearchQuery(\"\");\r\n\t\t\tsetIsActive([true, false]);\r\n\t\t\tsetSelectedCategory(null);\r\n\t\t};\r\n\t\twindow.addEventListener(\"focusout\", handleBeforeUnload);\r\n\t}, []);\r\n\t//control the button active\r\n\tconst handleClick = (index: any) => {\r\n\t\tsetSelectedCategory(null);\r\n\t\tconst updateActive = [...isActive];\r\n\t\tupdateActive[index] = !updateActive[index];\r\n\t\tfor (let i = 0; i < updateActive.length; i++) {\r\n\t\t\tif (i !== index) {\r\n\t\t\t\tupdateActive[i] = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetIsActive(updateActive);\r\n\t\tif (index === 1) {\r\n\t\t\thandleProduit();\r\n\t\t} else {\r\n\t\t\thandleNearby();\r\n\t\t}\r\n\t};\r\n\t//handle the button produits\r\n\tconst handleProduit = () => {\r\n\t\tconst page = \"categories\";\r\n\t\tsetPage(page);\r\n\t};\r\n\t//handle the button nearby\r\n\tconst handleNearby = () => {\r\n\t\tconst page = \"producteurs\";\r\n\t\tsetPage(page);\r\n\t};\r\n\r\n\tconst handleSearch = async (value: any) => {\r\n\t\tif (value) {\r\n\t\t\tconst searchQuery = value.toLowerCase();\r\n\t\t\tsetSearchQuery(searchQuery);\r\n\t\t} else {\r\n\t\t\tsetSearchQuery(\"\");\r\n\t\t}\r\n\t};\r\n\tconst handleBack = () => {\r\n\t\tsetSearchQuery(\"\");\r\n\t\tsetPage(\"producteurs\");\r\n\t\tsetSelectedCategory(null);\r\n\t};\r\n\tconst showFarmersCategory = (category: string) => {\r\n\t\tsetSelectedCategory(category);\r\n\t\tsetPage(\"\");\r\n\t};\r\n\r\n\tconst navClass = (index: any) =>\r\n\t\t`nav-line ${isActive[index] ? \"active\" : \"\"}`;\r\n\r\n\treturn (\r\n\t\t<IonPage>\r\n\t\t\t<div className=\"full-page\">\r\n\t\t\t\t<IonHeader>\r\n\t\t\t\t\t<IonToolbar>\r\n\t\t\t\t\t\t<IonItem lines=\"none\" className=\"ion-margin-top\">\r\n\t\t\t\t\t\t\t<div className=\"nab-content\">\r\n\t\t\t\t\t\t\t\t<IonIcon\r\n\t\t\t\t\t\t\t\t\tsrc={arrowLeft}\r\n\t\t\t\t\t\t\t\t\tonClick={handleBack}\r\n\t\t\t\t\t\t\t\t\tclassName=\"nav-icon ion-icon\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<IonSearchbar\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"SEARCH\"\r\n\t\t\t\t\t\t\t\t\tvalue={searchQuery}\r\n\t\t\t\t\t\t\t\t\tonKeyDown={(e) =>\r\n\t\t\t\t\t\t\t\t\t\thandleSearch(e.currentTarget.value)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tclassName=\"ion-justify-content-end searchBar\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<IonIcon\r\n\t\t\t\t\t\t\t\t\t\tsrc={search}\r\n\t\t\t\t\t\t\t\t\t\tslot=\"end\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"search-icon\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</IonSearchbar>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</IonItem>\r\n\t\t\t\t\t\t<IonGrid class=\"ion-margin-horizontal\">\r\n\t\t\t\t\t\t\t<IonRow>\r\n\t\t\t\t\t\t\t\t<IonCol size=\"6\" class=\"custom-center\">\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tclassName={navClass(0)}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleClick(0);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<IonText className=\"nav-text ion-text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\tà proximité\r\n\t\t\t\t\t\t\t\t\t\t</IonText>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</IonCol>\r\n\t\t\t\t\t\t\t\t<IonCol size=\"6\" class=\"custom-center\">\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tclassName={navClass(1)}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleClick(1);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<IonText className=\"nav-text ion-text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\tCatégorie\r\n\t\t\t\t\t\t\t\t\t\t</IonText>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</IonCol>\r\n\t\t\t\t\t\t\t</IonRow>\r\n\t\t\t\t\t\t</IonGrid>\r\n\t\t\t\t\t</IonToolbar>\r\n\t\t\t\t</IonHeader>\r\n\t\t\t\t<IonContent>\r\n\t\t\t\t\t{searchQuery !== \"\" ? ( // if searchQuery is not empty, show the search page\r\n\t\t\t\t\t\t<FarmerSearchPage\r\n\t\t\t\t\t\t\tsearchQuery={searchQuery}\r\n\t\t\t\t\t\t\tpage={page}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t// else show the page selected\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t{page === \"producteurs\" ? <FarmerPage /> : null}\r\n\t\t\t\t\t\t\t{page === \"categories\" ? (\r\n\t\t\t\t\t\t\t\t<FarmerCategories\r\n\t\t\t\t\t\t\t\t\tselectedCategory={selectedCategory}\r\n\t\t\t\t\t\t\t\t\tonSelectCategory={(category) =>\r\n\t\t\t\t\t\t\t\t\t\tshowFarmersCategory(category)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t{selectedCategory ? (\r\n\t\t\t\t\t\t\t\t<FarmersByCategory\r\n\t\t\t\t\t\t\t\t\tcategoryId={selectedCategory}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</IonContent>\r\n\t\t\t</div>\r\n\t\t</IonPage>\r\n\t);\r\n};\r\nexport default IndexFarmers;\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\pages\\farmers\\NewsFarmerPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\pages\\map\\Map.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\pages\\profile\\Profile.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'Database' is defined but never used.","line":11,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":11,"endColumn":18},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'LoadingScreen' is defined but never used.","line":18,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":18,"endColumn":21},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'baseUrl' is assigned a value but never used.","line":24,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":24,"endColumn":15},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'util' is assigned a value but never used.","line":27,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":27,"endColumn":13},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'isLoading' is assigned a value but never used.","line":29,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":29,"endColumn":18},{"ruleId":"@typescript-eslint/ban-ts-comment","severity":2,"message":"Use \"@ts-expect-error\" instead of \"@ts-ignore\", as \"@ts-ignore\" will do nothing if the following line is error-free.","line":35,"column":5,"nodeType":"Line","messageId":"tsIgnoreInsteadOfExpectError","endLine":35,"endColumn":18,"suggestions":[{"messageId":"replaceTsIgnoreWithTsExpectError","fix":{"range":[1170,1183],"text":"// @ts-expect-error"},"desc":"Replace \"@ts-ignore\" with \"@ts-expect-error\"."}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'fetchData' is assigned a value but never used.","line":40,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":40,"endColumn":18},{"ruleId":"react/no-unescaped-entities","severity":2,"message":"`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","line":95,"column":13,"nodeType":"JSXText","messageId":"unescapedEntityAlts"}],"suppressedMessages":[],"errorCount":8,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// React and React Router\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// Ionic Components\r\nimport { IonPage, IonContent, IonButton } from \"@ionic/react\";\r\n\r\n// Supabase Components\r\nimport { supabase } from \"../../supabaseClient\";\r\nimport { User } from \"@supabase/supabase-js\";\r\nimport { Database } from \"../../types/supabase\";\r\n\r\n// Models and Services\r\nimport { Utilisateur } from \"../../models/User\";\r\nimport { getUserInfo } from \"../../services/userService\";\r\n\r\n// Custom Components\r\nimport LoadingScreen from \"../../components/LoadingScreen\";\r\n\r\n// Custom Styling\r\nimport \"./Profile.css\";\r\n\r\nconst Profile: React.FC = () => {\r\n\tconst baseUrl =\r\n\t\t\"https://sktoqgbcjidoohzeobcz.supabase.co/storage/v1/object/public/avatars/agri/\";\r\n\tconst [user, setUser] = useState<User | null>(null);\r\n\tconst [util, setUtil] = useState<Utilisateur | null>(null);\r\n\tconst history = useHistory();\r\n\tconst [isLoading, setIsLoading] = useState<boolean>(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst { data: authListener } = supabase.auth.onAuthStateChange(\r\n\t\t\tasync (event, session) => {\r\n\t\t\t\tconst currentUser = session?.user;\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetUser(currentUser);\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tconst fetchData = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tif (user != null) {\r\n\t\t\t\t\tconst userData = await getUserInfo(user.id);\r\n\t\t\t\t\tsetUtil(userData);\r\n\t\t\t\t\tconsole.log(userData);\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(\"Failed to fetch data:\", error);\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\treturn () => {\r\n\t\t\tauthListener?.subscription.unsubscribe();\r\n\t\t};\r\n\t}, []);\r\n\r\n\tconst redirectToLogin = () => {\r\n\t\thistory.push(\"/login\");\r\n\t};\r\n\r\n\tconst redirectToProfileEdit = () => {\r\n\t\tif (user) {\r\n\t\t\thistory.push(`/profile_edit/${user.id}`);\r\n\t\t} else {\r\n\t\t\thistory.push(\"/login\");\r\n\t\t}\r\n\t};\r\n\r\n\tconst signOut = async () => {\r\n\t\tconst { error } = await supabase.auth.signOut();\r\n\t\tif (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t} else {\r\n\t\t\tconsole.log(\"Déconnexion réussie\");\r\n\t\t\thistory.push(\"/profile\");\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<IonPage>\r\n\t\t\t<IonContent>\r\n\t\t\t\t{user ? (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\tBonjour {user.email}\r\n\t\t\t\t\t\t<IonButton onClick={signOut}>Se déconnecter</IonButton>\r\n\t\t\t\t\t\t<IonButton onClick={redirectToProfileEdit}>\r\n\t\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t\t\tEdit{\" \"}\r\n\t\t\t\t\t\t</IonButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\tVous n'êtes pas connecté.\r\n\t\t\t\t\t\t<IonButton onClick={redirectToLogin}>\r\n\t\t\t\t\t\t\tSe connecter\r\n\t\t\t\t\t\t</IonButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</IonContent>\r\n\t\t</IonPage>\r\n\t);\r\n};\r\nexport default Profile;\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\pages\\profile\\Profile2.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'useParams' is defined but never used.","line":3,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":31},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'IonContent' is defined but never used.","line":6,"column":19,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":29},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'IonTitle' is defined but never used.","line":6,"column":42,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":50},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'Database' is defined but never used.","line":11,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":11,"endColumn":18},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'authListener' is assigned a value but never used.","line":32,"column":17,"nodeType":"Identifier","messageId":"unusedVar","endLine":32,"endColumn":29},{"ruleId":"@typescript-eslint/ban-ts-comment","severity":2,"message":"Use \"@ts-expect-error\" instead of \"@ts-ignore\", as \"@ts-ignore\" will do nothing if the following line is error-free.","line":35,"column":5,"nodeType":"Line","messageId":"tsIgnoreInsteadOfExpectError","endLine":35,"endColumn":18,"suggestions":[{"messageId":"replaceTsIgnoreWithTsExpectError","fix":{"range":[1191,1204],"text":"// @ts-expect-error"},"desc":"Replace \"@ts-ignore\" with \"@ts-expect-error\"."}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'fetchData' is assigned a value but never used.","line":40,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":40,"endColumn":18},{"ruleId":"react/no-unescaped-entities","severity":2,"message":"`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","line":113,"column":12,"nodeType":"JSXText","messageId":"unescapedEntityAlts"}],"suppressedMessages":[],"errorCount":8,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// React and React Router\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\n// Ionic Components\r\nimport { IonPage, IonContent, IonButton, IonTitle } from \"@ionic/react\";\r\n\r\n// Supabase Components\r\nimport { supabase } from \"../../supabaseClient\";\r\nimport { User } from \"@supabase/supabase-js\";\r\nimport { Database } from \"../../types/supabase\";\r\n\r\n// Models and Services\r\nimport { Utilisateur } from \"../../models/User\";\r\nimport { getUserInfo } from \"../../services/userService\";\r\n\r\n// Custom Components\r\nimport LoadingScreen from \"../../components/LoadingScreen\";\r\n\r\n// Custom Styling\r\nimport \"./Profile.css\";\r\n\r\nconst Profile: React.FC = () => {\r\n\tconst baseUrl =\r\n\t\t\"https://sktoqgbcjidoohzeobcz.supabase.co/storage/v1/object/public/avatars/agri/\";\r\n\tconst [user, setUser] = useState<User | null>(null);\r\n\tconst [util, setUtil] = useState<Utilisateur | null>(null);\r\n\tconst history = useHistory();\r\n\tconst [isLoading, setIsLoading] = useState<boolean>(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst { data: authListener } = supabase.auth.onAuthStateChange(\r\n\t\t\tasync (event, session) => {\r\n\t\t\t\tconst currentUser = session?.user;\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetUser(currentUser);\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tconst fetchData = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tif (user != null) {\r\n\t\t\t\t\tconst userData = await getUserInfo(user.id);\r\n\t\t\t\t\tsetUtil(userData);\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(\"Failed to fetch data:\", error);\r\n\t\t\t} finally {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif (!user && !util) {\r\n\t\t\thistory.push(\"/login\");\r\n\t\t}\r\n\t}, [user, history]);\r\n\r\n\tconst redirectToLogin = () => {\r\n\t\thistory.push(\"/login\");\r\n\t};\r\n\r\n\tconst redirectToProfileEdit = () => {\r\n\t\tif (user != null) history.replace(`/profile-edit/${user.id}`);\r\n\t};\r\n\r\n\tconst signOut = async () => {\r\n\t\tconst { error } = await supabase.auth.signOut();\r\n\t\tif (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t} else {\r\n\t\t\tconsole.log(\"Déconnexion réussie\");\r\n\t\t\tredirectToLogin();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<IonPage>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<LoadingScreen />\r\n\t\t\t) : util ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"image_mask\">\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tclassName=\"user_img_round\"\r\n\t\t\t\t\t\t\tsrc={`${baseUrl}${\r\n\t\t\t\t\t\t\t\tutil.lien_image\r\n\t\t\t\t\t\t\t\t\t? util.lien_image\r\n\t\t\t\t\t\t\t\t\t: \"default.jfif\"\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\talt=\"Image de l'utilisateur\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"header-container\">\r\n\t\t\t\t\t\t<h1>\r\n\t\t\t\t\t\t\t{util.prenom} {util.nom}\r\n\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t\t<div className=\"information\">\r\n\t\t\t\t\t\t\t<div className=\"numTel\">{util.num_tel}</div>\r\n\t\t\t\t\t\t\t<div className=\"email\">{util.email}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<IonButton onClick={redirectToProfileEdit}>\r\n\t\t\t\t\t\t\tModifier\r\n\t\t\t\t\t\t</IonButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"deconnexion\">\r\n\t\t\t\t\t\t<IonButton onClick={signOut}>Déconnexion</IonButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<div>\r\n\t\t\t\t\tVous n'êtes pas connecté.\r\n\t\t\t\t\t<IonButton onClick={redirectToLogin}>\r\n\t\t\t\t\t\tSe connecter\r\n\t\t\t\t\t</IonButton>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</IonPage>\r\n\t);\r\n};\r\n\r\nexport default Profile;\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\pages\\profile\\ProfileEdit.tsx","messages":[{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":25,"column":10,"nodeType":"BlockStatement","messageId":"unexpected","endLine":26,"endColumn":4,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[573,577],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// React and React Router\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\n// Ionic Components\r\nimport { IonButton } from \"@ionic/react\";\r\n\r\n// Custom Styling\r\nimport \"./ProfileEdit.css\";\r\n\r\nconst ProfileEdit: React.FC = () => {\r\n\tconst { user_id } = useParams<{ user_id: string }>();\r\n\tconst history = useHistory();\r\n\r\n\tconst [formData, setFormData] = useState({\r\n\t\tnom: \"\",\r\n\t\tprenom: \"\",\r\n\t\temail: \"\",\r\n\t\tnum_tel: \"\",\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!user_id) {\r\n\t\t\thistory.push(\"/login\");\r\n\t\t} else {\r\n\t\t}\r\n\t}, [user_id, history]);\r\n\tconst handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tconst { name, value } = event.target;\r\n\t\tsetFormData((prevFormData) => ({\r\n\t\t\t...prevFormData,\r\n\t\t\t[name]: value,\r\n\t\t}));\r\n\t};\r\n\r\n\tconst handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n\t\tevent.preventDefault();\r\n\t\ttry {\r\n\t\t\t// Envoyer une requête au serveur pour mettre à jour les éléments de l'utilisateur avec les nouvelles valeurs\r\n\t\t\t// Utiliser formData pour récupérer les nouvelles valeurs des champs de formulaire\r\n\t\t\t// Rediriger l'utilisateur vers la page de profil mise à jour après la soumission réussie du formulaire\r\n\t\t} catch (error) {\r\n\t\t\t// Gérer les erreurs de requête et afficher un message d'erreur si nécessaire\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form className=\"editForm\" onSubmit={handleSubmit}>\r\n\t\t\t<label>\r\n\t\t\t\tNom :\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"nom\"\r\n\t\t\t\t\tvalue={formData.nom}\r\n\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t/>\r\n\t\t\t</label>\r\n\t\t\t<label>\r\n\t\t\t\tPrénom :\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"prenom\"\r\n\t\t\t\t\tvalue={formData.prenom}\r\n\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t/>\r\n\t\t\t</label>\r\n\t\t\t<label>\r\n\t\t\t\tAdresse e-mail :\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\tvalue={formData.email}\r\n\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t/>\r\n\t\t\t</label>\r\n\t\t\t<label>\r\n\t\t\t\tNuméro de téléphone :\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"tel\"\r\n\t\t\t\t\tname=\"num_tel\"\r\n\t\t\t\t\tvalue={formData.num_tel}\r\n\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t/>\r\n\t\t\t</label>\r\n\t\t\t<IonButton type=\"submit\">Enregistrer</IonButton>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default ProfileEdit;\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\pages\\test_tabs_todelete\\Tab1.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'NabvarComponent' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":23}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { IonContent, IonHeader, IonPage, IonTitle, IonToolbar } from '@ionic/react';\r\n\r\nimport './Tab1.css';\r\nimport NabvarComponent from '../../components/NabvarComponent';\r\n\r\nconst Tab1: React.FC = () => {\r\n  return (\r\n    <IonPage>\r\n      <IonContent fullscreen>\r\n        <IonHeader collapse=\"condense\">\r\n          <IonToolbar>\r\n            <IonTitle size=\"large\">Tab 12</IonTitle>\r\n          </IonToolbar>\r\n        </IonHeader>\r\n      </IonContent>\r\n      \r\n      \r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default Tab1;\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\pages\\test_tabs_todelete\\Tab2.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\pages\\test_tabs_todelete\\Tab3.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'IonCard' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":17},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'IonCardContent' is defined but never used.","line":2,"column":19,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":33},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'supabase' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":18},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'calculateDistance' is defined but never used.","line":7,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":7,"endColumn":27},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'userLocation' is assigned a value but never used.","line":30,"column":12,"nodeType":"Identifier","messageId":"unusedVar","endLine":30,"endColumn":24},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'setUserLocation' is assigned a value but never used.","line":30,"column":26,"nodeType":"Identifier","messageId":"unusedVar","endLine":30,"endColumn":41},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'destination' is assigned a value but never used.","line":43,"column":11,"nodeType":"Identifier","messageId":"unusedVar","endLine":43,"endColumn":22}],"suppressedMessages":[],"errorCount":7,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useEffect, useState } from 'react';\r\nimport { IonCard, IonCardContent, IonContent, IonHeader, IonPage, IonTitle, IonToolbar } from '@ionic/react';\r\nimport './Tab3.css';\r\nimport { supabase } from '../../supabaseClient';\r\nimport LoadingScreen from '../../components/LoadingScreen'; // Adjust the import path as needed\r\n\r\nfunction calculateDistance(lat1: number, lon1: number, lat2: number, lon2: number) {\r\n    const R = 6371; // Rayon de la terre en km\r\n    const dLat = toRad(lat2 - lat1);\r\n    const dLon = toRad(lon2 - lon1);\r\n    const a =\r\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n        Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) *\r\n        Math.sin(dLon / 2) * Math.sin(dLon / 2);\r\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    const distance = R * c; // Distance en km\r\n    return distance;\r\n}\r\n\r\nfunction toRad(value: number) {\r\n    return (value * Math.PI) / 180;\r\n}\r\n\r\n\r\n\r\n\r\nconst Tab3: React.FC = () => {\r\n    const [isLoading, setIsLoading] = useState(true); // Add a state to manage loading status\r\n\r\n    const [userLocation, setUserLocation] = useState<{ latitude: number, longitude: number } | null>(null);\r\n    useEffect(() => {\r\n        // Simulate a loading process, for example fetching data\r\n        const loadData = async () => {\r\n            // Pretend we're loading data, then set loading to false\r\n            await new Promise(resolve => setTimeout(resolve, 1000)); // Wait for 2 seconds\r\n            setIsLoading(false); // Hide the loading screen\r\n        };\r\n\r\n        loadData();\r\n    }, []);\r\n\r\n    // Un lieu spécifique, par exemple la Tour Eiffel 48.85835473209913, 2.2944613664788105\r\n    const destination = { latitude: 48.85835473209913, longitude: 2.2944613664788105 };\r\n\r\n\r\n    // Embedded Map with adjusted style\r\n    const mapIframe = `\r\n    <iframe\r\n      src=\"https://www.google.com/maps/d/u/0/embed?mid=1ny_1TOrj65dwzkjIgKCLnqCDwkyzhjA&ehbc=2E312F&z=9\"\r\n      class=\"map-iframe\"\r\n    ></iframe>`;\r\n\r\n\r\n    return (\r\n        <IonPage>\r\n            <IonHeader>\r\n                <IonToolbar>\r\n                    <IonTitle>Debug Tab</IonTitle>\r\n                </IonToolbar>\r\n            </IonHeader>\r\n            <IonContent fullscreen>\r\n                {isLoading ? (\r\n                    <LoadingScreen />\r\n                ) : (\r\n                    <>\r\n                        {/* ... existing IonCard for distance if applicable ... */}\r\n                        {/* Embedded Map in a container */}\r\n                        <div className=\"map-container\" dangerouslySetInnerHTML={{ __html: mapIframe }} />\r\n                    </>\r\n                )}\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n};\r\n\r\nexport default Tab3;\r\n\r\n\r\n\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\services\\CategorieService.tsx","messages":[{"ruleId":"prefer-const","severity":2,"message":"'data' is never reassigned. Use 'const' instead.","line":5,"column":8,"nodeType":"Identifier","messageId":"useConst","endLine":5,"endColumn":12,"fix":{"range":[144,274],"text":"const { data, error } = await supabase.rpc(\r\n\t\t\"get_all_agriculteurs_distance_info_by_category\",\r\n\t\t{\r\n\t\t\tcategory_id: id,\r\n\t\t}\r\n\t);"}},{"ruleId":"prefer-const","severity":2,"message":"'error' is never reassigned. Use 'const' instead.","line":5,"column":14,"nodeType":"Identifier","messageId":"useConst","endLine":5,"endColumn":19,"fix":{"range":[144,274],"text":"const { data, error } = await supabase.rpc(\r\n\t\t\"get_all_agriculteurs_distance_info_by_category\",\r\n\t\t{\r\n\t\t\tcategory_id: id,\r\n\t\t}\r\n\t);"}}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"// Supabase Components\r\nimport { supabase } from \"../supabaseClient\";\r\n\r\nexport const getUsersWithFarmersByCategory = async (id: string) => {\r\n\tlet { data, error } = await supabase.rpc(\r\n\t\t\"get_all_agriculteurs_distance_info_by_category\",\r\n\t\t{\r\n\t\t\tcategory_id: id,\r\n\t\t}\r\n\t);\r\n\tif (error) console.error(error);\r\n\treturn data;\r\n};\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\services\\categoryService.tsx","messages":[{"ruleId":"prefer-const","severity":2,"message":"'data' is never reassigned. Use 'const' instead.","line":5,"column":8,"nodeType":"Identifier","messageId":"useConst","endLine":5,"endColumn":12,"fix":{"range":[121,184],"text":"const { data, error } = await supabase.rpc(\"get_all_categories\");"}},{"ruleId":"prefer-const","severity":2,"message":"'error' is never reassigned. Use 'const' instead.","line":5,"column":14,"nodeType":"Identifier","messageId":"useConst","endLine":5,"endColumn":19,"fix":{"range":[121,184],"text":"const { data, error } = await supabase.rpc(\"get_all_categories\");"}}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"// Supabase Components\r\nimport { supabase } from \"../supabaseClient\";\r\n\r\nexport const getAllCategories = async () => {\r\n\tlet { data, error } = await supabase.rpc(\"get_all_categories\");\r\n\tif (error) console.error(error);\r\n\telse console.log(\"category: \", data);\r\n\treturn data;\r\n};\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\services\\farmerCategorie.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\services\\farmerDetailService.tsx","messages":[{"ruleId":"prefer-const","severity":2,"message":"'data' is never reassigned. Use 'const' instead.","line":8,"column":8,"nodeType":"Identifier","messageId":"useConst","endLine":8,"endColumn":12,"fix":{"range":[206,297],"text":"const { data, error } = await supabase.rpc(\"get_agriculteur_ferme_info\", {\r\n\t\tp_id: id,\r\n\t});"}},{"ruleId":"prefer-const","severity":2,"message":"'error' is never reassigned. Use 'const' instead.","line":8,"column":14,"nodeType":"Identifier","messageId":"useConst","endLine":8,"endColumn":19,"fix":{"range":[206,297],"text":"const { data, error } = await supabase.rpc(\"get_agriculteur_ferme_info\", {\r\n\t\tp_id: id,\r\n\t});"}}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"// Supabase Components\r\nimport { supabase } from \"../supabaseClient\";\r\n\r\n// Models\r\nimport { Farmer } from \"../models/Farmer\";\r\n\r\nexport const getUserWithFarmer = async (id: string): Promise<Farmer> => {\r\n\tlet { data, error } = await supabase.rpc(\"get_agriculteur_ferme_info\", {\r\n\t\tp_id: id,\r\n\t});\r\n\tif (error) console.error(error);\r\n\telse console.log(data);\r\n\treturn data as Farmer;\r\n};\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\services\\farmerService.tsx","messages":[{"ruleId":"prefer-const","severity":2,"message":"'data' is never reassigned. Use 'const' instead.","line":5,"column":8,"nodeType":"Identifier","messageId":"useConst","endLine":5,"endColumn":12,"fix":{"range":[124,210],"text":"const { data, error } = await supabase.rpc(\r\n\t\t\"get_all_agriculteurs_distance_info\"\r\n\t);"}},{"ruleId":"prefer-const","severity":2,"message":"'error' is never reassigned. Use 'const' instead.","line":5,"column":14,"nodeType":"Identifier","messageId":"useConst","endLine":5,"endColumn":19,"fix":{"range":[124,210],"text":"const { data, error } = await supabase.rpc(\r\n\t\t\"get_all_agriculteurs_distance_info\"\r\n\t);"}}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"// Supabase Components\r\nimport { supabase } from \"../supabaseClient\";\r\n\r\nexport const getUsersWithFarmers = async () => {\r\n\tlet { data, error } = await supabase.rpc(\r\n\t\t\"get_all_agriculteurs_distance_info\"\r\n\t);\r\n\tif (error) console.error(error);\r\n\telse console.log(data);\r\n\treturn data;\r\n};\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\services\\farmerServiceCategory.tsx","messages":[{"ruleId":"prefer-const","severity":2,"message":"'data' is never reassigned. Use 'const' instead.","line":8,"column":8,"nodeType":"Identifier","messageId":"useConst","endLine":8,"endColumn":12,"fix":{"range":[191,275],"text":"const { data, error } = await supabase.rpc(\r\n\t\t\"get_all_agriculteurs_by_category\"\r\n\t);"}},{"ruleId":"prefer-const","severity":2,"message":"'error' is never reassigned. Use 'const' instead.","line":8,"column":14,"nodeType":"Identifier","messageId":"useConst","endLine":8,"endColumn":19,"fix":{"range":[191,275],"text":"const { data, error } = await supabase.rpc(\r\n\t\t\"get_all_agriculteurs_by_category\"\r\n\t);"}},{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":16,"column":43,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":16,"endColumn":46,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[447,450],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[447,450],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"prefer-const","severity":2,"message":"'categories' is never reassigned. Use 'const' instead.","line":17,"column":6,"nodeType":"Identifier","messageId":"useConst","endLine":17,"endColumn":21,"fix":{"range":[459,484],"text":"const categories: any = [];"}},{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":17,"column":18,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":17,"endColumn":21,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[475,478],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[475,478],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"// Supabase Components\r\nimport { supabase } from \"../supabaseClient\";\r\n\r\n// Models\r\nimport { Farmer } from \"../models/Farmer\";\r\n\r\nexport const getUsersWithFarmersByCategory = async () => {\r\n\tlet { data, error } = await supabase.rpc(\r\n\t\t\"get_all_agriculteurs_by_category\"\r\n\t);\r\n\tif (error) console.error(error);\r\n\telse console.log(data, \"CATEGORY: \", data[0].type_produit_principal);\r\n\treturn data;\r\n};\r\n\r\nexport const getCategories = async (data: any) => {\r\n\tlet categories: any = [];\r\n\tdata.forEach((farmer: Farmer) => {\r\n\t\tif (!categories.includes(farmer.type_produit_principal)) {\r\n\t\t\tcategories.push(farmer.type_produit_principal);\r\n\t\t}\r\n\t});\r\n\treturn categories;\r\n};\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\services\\follow_service.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\services\\global_news_service.tsx","messages":[{"ruleId":"prefer-const","severity":2,"message":"'data' is never reassigned. Use 'const' instead.","line":8,"column":8,"nodeType":"Identifier","messageId":"useConst","endLine":8,"endColumn":12,"fix":{"range":[188,338],"text":"const { data, error } = await supabase\r\n\t\t.from(\"news\")\r\n\t\t.select(\"*\")\r\n\t\t.is(\"id_agriculteur\", null)\r\n\t\t.order(\"date_creation\", { ascending: false });"}},{"ruleId":"prefer-const","severity":2,"message":"'error' is never reassigned. Use 'const' instead.","line":8,"column":14,"nodeType":"Identifier","messageId":"useConst","endLine":8,"endColumn":19,"fix":{"range":[188,338],"text":"const { data, error } = await supabase\r\n\t\t.from(\"news\")\r\n\t\t.select(\"*\")\r\n\t\t.is(\"id_agriculteur\", null)\r\n\t\t.order(\"date_creation\", { ascending: false });"}}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"// Supabase Components\r\nimport { supabase } from \"../supabaseClient\";\r\n\r\n// Models\r\nimport { News } from \"../models/News\";\r\n\r\nexport const getGlobalNews = async (): Promise<News[]> => {\r\n\tlet { data, error } = await supabase\r\n\t\t.from(\"news\")\r\n\t\t.select(\"*\")\r\n\t\t.is(\"id_agriculteur\", null)\r\n\t\t.order(\"date_creation\", { ascending: false });\r\n\tif (error) {\r\n\t\tconsole.error(\"Error fetching news\", error);\r\n\t\treturn [];\r\n\t}\r\n\treturn data as News[];\r\n};\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\services\\horaires_point_de_vente.tsx","messages":[{"ruleId":"prefer-const","severity":2,"message":"'data' is never reassigned. Use 'const' instead.","line":10,"column":8,"nodeType":"Identifier","messageId":"useConst","endLine":10,"endColumn":12,"fix":{"range":[230,335],"text":"const { data, error } = await supabase.rpc(\"get_horaires_ferme\", {\r\n\t\tagriculteur_id: agriculteur_id,\r\n\t});"}},{"ruleId":"prefer-const","severity":2,"message":"'error' is never reassigned. Use 'const' instead.","line":10,"column":14,"nodeType":"Identifier","messageId":"useConst","endLine":10,"endColumn":19,"fix":{"range":[230,335],"text":"const { data, error } = await supabase.rpc(\"get_horaires_ferme\", {\r\n\t\tagriculteur_id: agriculteur_id,\r\n\t});"}}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"// Supabase Components\r\nimport { supabase } from \"../supabaseClient\";\r\n\r\n// Models\r\nimport { Horaires } from \"../models/Horaires\";\r\n\r\nexport const getHorairesFerme = async (\r\n\tagriculteur_id: string\r\n): Promise<Horaires[]> => {\r\n\tlet { data, error } = await supabase.rpc(\"get_horaires_ferme\", {\r\n\t\tagriculteur_id: agriculteur_id,\r\n\t});\r\n\tif (error) console.error(error);\r\n\treturn data as Horaires[];\r\n};\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\services\\newsService.tsx","messages":[{"ruleId":"prefer-const","severity":2,"message":"'data' is never reassigned. Use 'const' instead.","line":9,"column":8,"nodeType":"Identifier","messageId":"useConst","endLine":9,"endColumn":12,"fix":{"range":[243,348],"text":"const { data, error } = await supabase\r\n\t\t.from(\"news\")\r\n\t\t.select(\"*\")\r\n\t\t.eq(\"id_agriculteur\", farmerId);"}},{"ruleId":"prefer-const","severity":2,"message":"'error' is never reassigned. Use 'const' instead.","line":9,"column":14,"nodeType":"Identifier","messageId":"useConst","endLine":9,"endColumn":19,"fix":{"range":[243,348],"text":"const { data, error } = await supabase\r\n\t\t.from(\"news\")\r\n\t\t.select(\"*\")\r\n\t\t.eq(\"id_agriculteur\", farmerId);"}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'imagesError' is assigned a value but never used.","line":40,"column":31,"nodeType":"Identifier","messageId":"unusedVar","endLine":40,"endColumn":42}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"// Supabase Components\r\nimport { supabase } from \"../supabaseClient\";\r\n\r\n// Models\r\nimport { News } from \"../models/News\";\r\n\r\nexport const getNewsByFarmer = async (farmerId: string): Promise<News[]> => {\r\n\tconsole.log(\"farmerid\", farmerId);\r\n\tlet { data, error } = await supabase\r\n\t\t.from(\"news\")\r\n\t\t.select(\"*\")\r\n\t\t.eq(\"id_agriculteur\", farmerId);\r\n\tconsole.log(\"datanews\", data);\r\n\tif (error) {\r\n\t\tconsole.error(\"Error fetching news\", error);\r\n\t\treturn [];\r\n\t}\r\n\treturn data as News[];\r\n};\r\n\r\nexport const getNewsForUser = async (userId: string): Promise<News[]> => {\r\n\tconst { data: followedFarmers, error: followError } = await supabase\r\n\t\t.from(\"follow\")\r\n\t\t.select(\"id_agriculteur\")\r\n\t\t.eq(\"id_utilisateur\", userId);\r\n\r\n\tif (followError) {\r\n\t\tconsole.error(\"Error fetching followed farmers\", followError);\r\n\t\treturn [];\r\n\t}\r\n\r\n\tconst { data: news, error: newsError } = await supabase\r\n\t\t.from(\"news\")\r\n\t\t.select(\"*\")\r\n\t\t.in(\r\n\t\t\t\"id_agriculteur\",\r\n\t\t\tfollowedFarmers.map((ff) => ff.id_agriculteur)\r\n\t\t);\r\n\r\n\tconst { data: images, error: imagesError } = await supabase\r\n\t\t.from(\"utilisateur\")\r\n\t\t.select(\"lien_image,id_utilisateur\")\r\n\t\t.in(\r\n\t\t\t\"id_utilisateur\",\r\n\t\t\tfollowedFarmers.map((ff) => ff.id_agriculteur)\r\n\t\t);\r\n\r\n\t//concatenate images to news\r\n\tif (newsError) {\r\n\t\tconsole.error(\"Error fetching news\", newsError);\r\n\t\treturn [];\r\n\t} else {\r\n\t\tnews?.forEach((n) => {\r\n\t\t\timages?.forEach((i) => {\r\n\t\t\t\tif (n.id_agriculteur == i.id_utilisateur) {\r\n\t\t\t\t\tn.lien_image_user = i.lien_image;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tconsole.log(news);\r\n\treturn news as News[];\r\n};\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\services\\searchBarService.tsx","messages":[{"ruleId":"prefer-const","severity":2,"message":"'data' is never reassigned. Use 'const' instead.","line":10,"column":8,"nodeType":"Identifier","messageId":"useConst","endLine":10,"endColumn":12,"fix":{"range":[221,326],"text":"const { data, error } = await supabase.rpc(\"get_search_agriculteur_info\", {\r\n\t\tprenom_search: prenom,\r\n\t});"}},{"ruleId":"prefer-const","severity":2,"message":"'error' is never reassigned. Use 'const' instead.","line":10,"column":14,"nodeType":"Identifier","messageId":"useConst","endLine":10,"endColumn":19,"fix":{"range":[221,326],"text":"const { data, error } = await supabase.rpc(\"get_search_agriculteur_info\", {\r\n\t\tprenom_search: prenom,\r\n\t});"}}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"// Supabase Components\r\nimport { supabase } from \"../supabaseClient\";\r\n\r\n// Models\r\nimport { Farmer } from \"../models/Farmer\";\r\n\r\nexport const getUserWithFarmerSearch = async (\r\n\tprenom: string\r\n): Promise<Farmer> => {\r\n\tlet { data, error } = await supabase.rpc(\"get_search_agriculteur_info\", {\r\n\t\tprenom_search: prenom,\r\n\t});\r\n\tif (error) console.error(\"error:\", error);\r\n\telse console.log(data);\r\n\treturn data as Farmer;\r\n};\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\services\\userService.tsx","messages":[{"ruleId":"prefer-const","severity":2,"message":"'data' is never reassigned. Use 'const' instead.","line":8,"column":8,"nodeType":"Identifier","messageId":"useConst","endLine":8,"endColumn":12,"fix":{"range":[208,296],"text":"const { data, error } = await supabase.rpc(\"get_utilisateur_info\", {\r\n\t\tid_util: id,\r\n\t});"}},{"ruleId":"prefer-const","severity":2,"message":"'error' is never reassigned. Use 'const' instead.","line":8,"column":14,"nodeType":"Identifier","messageId":"useConst","endLine":8,"endColumn":19,"fix":{"range":[208,296],"text":"const { data, error } = await supabase.rpc(\"get_utilisateur_info\", {\r\n\t\tid_util: id,\r\n\t});"}}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"// Supabase Components\r\nimport { supabase } from \"../supabaseClient\";\r\n\r\n// Models\r\nimport { Utilisateur } from \"../models/User\";\r\n\r\nexport const getUserInfo = async (id: string): Promise<Utilisateur> => {\r\n\tlet { data, error } = await supabase.rpc(\"get_utilisateur_info\", {\r\n\t\tid_util: id,\r\n\t});\r\n\tif (error) console.error(error);\r\n\telse console.log(data);\r\n\treturn data as Utilisateur;\r\n};\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\setupTests.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\supabaseClient.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'supabaseAnonKey' is assigned a value but never used.","line":5,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":30}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { createClient, SupabaseClient } from \"@supabase/supabase-js\";\r\nimport { Database } from \"./types/supabase\";\r\n\r\nconst supabaseUrl: string = \"https://sktoqgbcjidoohzeobcz.supabase.co\";\r\nconst supabaseAnonKey: string =\r\n\t\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNrdG9xZ2Jjamlkb29oemVvYmN6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE2OTgwNDg2NjQsImV4cCI6MjAxMzYyNDY2NH0.bHTlOnAimquiX5Ndvs7pje_O3X2B0NtBoPIs_oU5z7k\";\r\n\r\n//service key\r\nconst supabaseServiceKey: string =\r\n\t\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNrdG9xZ2Jjamlkb29oemVvYmN6Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTY5ODA0ODY2NCwiZXhwIjoyMDEzNjI0NjY0fQ.tN3pIC9Tz5FDX_R3KGWD6eaDCRFgyhdZNdLOvZzFof0\";\r\n//export const supabase: SupabaseClient = createClient<Database>(supabaseUrl, supabaseAnonKey);\r\nexport const supabase: SupabaseClient = createClient<Database>(\r\n\tsupabaseUrl,\r\n\tsupabaseServiceKey\r\n);\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\types\\supabase.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\src\\vite-env.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"D:\\GABOR45_app\\GABOR45\\apps\\GABOR45\\vite.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]}]